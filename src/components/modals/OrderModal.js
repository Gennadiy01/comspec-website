// src/components/modals/OrderModal.js - –í–ò–ü–†–ê–í–õ–ï–ù–û –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
import React, { useState, useEffect, useRef, useMemo, useCallback  } from 'react';
import { useOrderModal } from '../../context/OrderModalContext';
import AddressSearch from '../forms/AddressSearch';
import { getLoadingPointsByProduct } from '../../data/loadingPoints';
import jsonpService from '../../services/JSONPGoogleSheetsService';
import ValidationUtils from '../../utils/validation';
import '../../styles/order-modal.css';

// –î–∞–Ω—ñ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –ø—Ä–æ–µ–∫—Ç—É COMSPEC
const products = [
  { id: '–©–µ–±—ñ–Ω—å', name: '–©–µ–±—ñ–Ω—å', category: '–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏' },
  { id: '–ü—ñ—Å–æ–∫', name: '–ü—ñ—Å–æ–∫', category: '–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏' },
  { id: '–ê—Å—Ñ–∞–ª—å—Ç', name: '–ê—Å—Ñ–∞–ª—å—Ç', category: '–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏' },
  { id: '–ë–µ—Ç–æ–Ω', name: '–ë–µ—Ç–æ–Ω', category: '–ë—É–¥—ñ–≤–µ–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏' }
];

// ‚úÖ –ú–ê–ü–Ü–ù–ì –ö–ê–¢–ï–ì–û–†–Ü–ô: –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ –Ω–∞–∑–≤–∏ ‚Üí —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –Ω–∞–∑–≤–∏
const categoryMapping = {
  'gravel': '–©–µ–±—ñ–Ω—å',
  'sand': '–ü—ñ—Å–æ–∫', 
  'asphalt': '–ê—Å—Ñ–∞–ª—å—Ç',
  'concrete': '–ë–µ—Ç–æ–Ω'
};

const OrderModal = () => {
  const { isOpen, orderData, closeOrderModal } = useOrderModal();
  
  // –í–ê–ñ–õ–ò–í–û: –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–µ–∂–∏–º –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const isConsultationMode = orderData?.source === 'services-page';
  
  // –°—Ç–∞–Ω–∏ —Ñ–æ—Ä–º–∏
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    product: '',
    deliveryType: 'delivery',
    address: '',
    loadingPoint: '',
    message: ''
  });
  
  const [errors, setErrors] = useState({});
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const [submitResult, setSubmitResult] = useState(null);
  
  // –í–ê–ñ–õ–ò–í–û: –°—Ç–∞–Ω–∏ –¥–ª—è –ø–æ—à—É–∫—É –∞–¥—Ä–µ—Å–∏ - –º–∞—é—Ç—å –±—É—Ç–∏ –∑–∞–≤–∂–¥–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ
  const [addressData, setAddressData] = useState(null);
  const [deliveryValidation, setDeliveryValidation] = useState(null);
  
  const firstInputRef = useRef(null);

  // –ú–µ–º–æ—ñ–∑—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
  const criticalErrors = useMemo(() => {
    return Object.keys(errors).filter(key => 
      key !== 'nameWarning' && errors[key]
    );
  }, [errors]);

  // –î–∏–Ω–∞–º—ñ—á–Ω—ñ —Ç–µ–∫—Å—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–µ–∂–∏–º—É
  const modalTitle = isConsultationMode ? '–ó–∞–º–æ–≤–∏—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é' : '–ó–∞–º–æ–≤–∏—Ç–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏';
  const modalSubtitle = isConsultationMode 
    ? '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –º–∏ –∑–≤\'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –¥–ª—è –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π' 
    : '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —Ñ–æ—Ä–º—É —ñ –º–∏ –∑–≤\'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º 15 —Ö–≤–∏–ª–∏–Ω –∞–±–æ –ø—Ä–æ—Å—Ç–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ 073 9 27 27 00';
  const submitButtonText = isConsultationMode ? '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞—è–≤–∫—É' : '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è';
  const messagePlaceholder = isConsultationMode 
    ? '–û–ø–∏—à—ñ—Ç—å –ø–æ—Å–ª—É–≥–∏, —è–∫—ñ –≤–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å...' 
    : '–£—Ç–æ—á–Ω—ñ—Ç—å –±–∞–∂–∞–Ω—É —Ñ—Ä–∞–∫—Ü—ñ—é —â–µ–±–µ–Ω—é, –º–∞—Ä–∫—É –∞—Å—Ñ–∞–ª—å—Ç—É –∞–±–æ –±–µ—Ç–æ–Ω—É.\n–û–ø–∏—à—ñ—Ç—å –í–∞—à –ø—Ä–æ–µ–∫—Ç –∞–±–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è.';

  // ‚úÖ –í–ò–ü–†–ê–í–õ–ï–ù–û: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  useEffect(() => {
    if (isOpen) {
      // –°–∫–∏–¥–∞—î–º–æ —Ñ–æ—Ä–º—É –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å
      setFormData({
        name: '',
        phone: '',
        email: '',
        product: '',
        deliveryType: 'delivery',
        address: '',
        loadingPoint: '',
        message: ''
      });

      // ‚úÖ –ê–í–¢–û–ó–ê–ü–û–í–ù–ï–ù–ù–Ø –¢–û–í–ê–†–£ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ä–µ–∂–∏–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)
      if (!isConsultationMode && orderData?.product) {
        console.log('üîÑ –ê–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É:', {
          orderDataProduct: orderData.product,
          mappedProduct: categoryMapping[orderData.product]
        });

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–∞–ø—ñ–Ω–≥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        const mappedProduct = categoryMapping[orderData.product] || orderData.product;
        
        setFormData(prev => ({
          ...prev,
          product: mappedProduct
        }));

        console.log('‚úÖ –¢–æ–≤–∞—Ä –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', mappedProduct);
      }
      
      // –§–æ–∫—É—Å—É—î–º–æ—Å—è –Ω–∞ –ø–µ—Ä—à–æ–º—É –ø–æ–ª—ñ –ø—ñ—Å–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
      setTimeout(() => {
        firstInputRef.current?.focus();
      }, 100);
      
      // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω–∏ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ
      setErrors({});
      setIsSubmitting(false);
      setShowSuccess(false);
      setSubmitResult(null);
      setAddressData(null);
      setDeliveryValidation(null);
    }
  }, [isOpen, orderData?.product, isConsultationMode]);

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const handleClose = useCallback(() => {
    // –°–∫–∏–¥–∞—î–º–æ —Ñ–æ—Ä–º—É
    setFormData({
      name: '',
      phone: '',
      email: '',
      product: '',
      deliveryType: 'delivery',
      address: '',
      loadingPoint: '',
      message: ''
    });
    setErrors({});
    setIsSubmitting(false);
    setShowSuccess(false);
    setSubmitResult(null);
    setAddressData(null);
    setDeliveryValidation(null);
    closeOrderModal();
  }, [closeOrderModal]);
  
  // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è Escape
  useEffect(() => {
    const handleEscape = (e) => {
      if (e.key === 'Escape' && isOpen && !isSubmitting) {
        handleClose();
      }
    };

    if (isOpen) {
      document.addEventListener('keydown', handleEscape);
    }

    return () => {
      document.removeEventListener('keydown', handleEscape);
    };
  }, [isOpen, isSubmitting, handleClose]);

  // –î–µ—Ç–µ–∫—Ü—ñ—è –ø—Ä–æ–±–ª–µ–º–Ω–∏—Ö –º–æ–±—ñ–ª—å–Ω–∏—Ö –±—Ä–∞—É–∑–µ—Ä—ñ–≤
  useEffect(() => {
    const detectMobileBrowser = () => {
      const userAgent = navigator.userAgent.toLowerCase();
      const isMobile = /android|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);
      const isProblematicBrowser = /miuibrowser|samsungbrowser|ucbrowser|oppo|vivo/i.test(userAgent);
      
      if (isMobile || isProblematicBrowser) {
        const selects = document.querySelectorAll('.form-select');
        selects.forEach(select => {
          select.classList.add('native-mobile');
          
          if (/android/i.test(userAgent)) {
            select.style.cssText += `
              -webkit-appearance: listbox !important;
              appearance: listbox !important;
              background-color: #ffffff !important;
              border: 2px solid #008080 !important;
              color: #333333 !important;
              font-size: 16px !important;
              padding: 12px !important;
              min-height: 48px !important;
            `;
          }
        });
      }
    };

    if (isOpen) {
      setTimeout(detectMobileBrowser, 100);
    }
  }, [isOpen]);

  // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    
    if (errors[name]) {
      setErrors(prev => {
        const newErrors = { ...prev };
        delete newErrors[name];
        return newErrors;
      });
    }
  };

  // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è –ø–æ–ª—è —ñ–º–µ–Ω—ñ –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é —á–µ—Ä–µ–∑ ValidationUtils
  const handleNameInput = (e) => {
    const { value } = e.target;
    const validation = ValidationUtils.validateName(value);
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ—á–∏—â–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    setFormData(prev => ({
      ...prev,
      name: validation.cleaned
    }));
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —è–∫—â–æ –±—É–ª–∏ –Ω–µ–ø—Ä–∏–ø—É—Å—Ç–∏–º—ñ —Å–∏–º–≤–æ–ª–∏
    if (value !== validation.cleaned && value.length > 0) {
      setErrors(prev => ({
        ...prev,
        nameWarning: '–î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏, –ø—Ä–æ–±—ñ–ª–∏, –¥–µ—Ñ—ñ—Å–∏ —Ç–∞ –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∏'
      }));
      
      setTimeout(() => {
        setErrors(prev => {
          const newErrors = { ...prev };
          delete newErrors.nameWarning;
          return newErrors;
        });
      }, 3000);
    }
    
    // –û—á–∏—â–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
    if (errors.name) {
      setErrors(prev => {
        const newErrors = { ...prev };
        delete newErrors.name;
        return newErrors;
      });
    }
  };

  // –û–±—Ä–æ–±–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º
  const handlePhoneInput = (e) => {
    const { value } = e.target;
    const validation = ValidationUtils.validatePhone(value);
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω —è–∫—â–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞
    setFormData(prev => ({
      ...prev,
      phone: validation.isValid ? validation.formatted : value
    }));
    
    // –û—á–∏—â–∞—î–º–æ –ø–æ–º–∏–ª–∫—É —è–∫—â–æ —Ç–µ–ª–µ—Ñ–æ–Ω —Å—Ç–∞–≤ –≤–∞–ª—ñ–¥–Ω–∏–º
    if (validation.isValid && errors.phone) {
      setErrors(prev => {
        const newErrors = { ...prev };
        delete newErrors.phone;
        return newErrors;
      });
    }
  };

  // –í–ò–ü–†–ê–í–õ–ï–ù–ò–ô —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤–∏–±–æ—Ä—É –∞–¥—Ä–µ—Å–∏
  const handleAddressSelect = (data) => {
    console.log('–í–∏–±—Ä–∞–Ω–æ –∞–¥—Ä–µ—Å—É:', data);
    
    setAddressData(data);
    setDeliveryValidation(data.validation);
    
    if (data.validation) {
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –¥–æ—Å—Ç–∞–≤–∫–∏:', {
        region: data.validation.region,
        available: data.validation.available,
        message: data.validation.message
      });
    }
  };

  // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º ValidationUtils
  const validateForm = () => {
    const validation = ValidationUtils.validateOrderForm(formData, isConsultationMode);
    
    setErrors(validation.errors);
    
    // –î–æ–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —ñ–º'—è —è–∫—â–æ –≤–æ–Ω–æ —î
    if (errors.nameWarning) {
      setErrors(prev => ({
        ...prev,
        nameWarning: errors.nameWarning
      }));
    }
    
    return validation.isValid;
  };

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∏ –∑ Google Sheets —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      const firstErrorField = document.querySelector('.form-input.error, .form-select.error');
      if (firstErrorField) {
        firstErrorField.scrollIntoView({ 
          behavior: 'smooth', 
          block: 'center' 
        });
        firstErrorField.focus();
      }
      return;
    }

    setIsSubmitting(true);
    setErrors(prev => {
      const newErrors = { ...prev };
      delete newErrors.submit;
      return newErrors;
    });

    try {
      // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö –¥–ª—è Google Sheets –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º ValidationUtils
      const cleanedData = ValidationUtils.prepareDataForSheets(formData, isConsultationMode);
      
      // –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –∞–¥—Ä–µ—Å–∏
      const orderDataForSheets = {
        ...cleanedData,
        region: (() => {
          // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –∑ addressData
          if (addressData?.validation?.region) {
            return addressData.validation.region;
          }
          
          // –ü–æ—Ç—ñ–º –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ deliveryValidation
          if (deliveryValidation?.region) {
            return deliveryValidation.region;
          }
          
          // –Ø–∫—â–æ —î –∞–¥—Ä–µ—Å–∞, –∞–ª–µ –Ω–µ–º–∞—î –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó - –≤–∏—Ç—è–≥—É—î–º–æ –æ–±–ª–∞—Å—Ç—å –≤—Ä—É—á–Ω—É
          if (formData.address) {
            const extractedRegion = ValidationUtils.validateDeliveryZone(formData.address);
            return extractedRegion.region;
          }
          
          // –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ–º–∞—î - –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫
          return '';
        })(),

        loadingPoint: (() => {
          console.log('üîç Debug loadingPoint:', {
            formLoadingPoint: formData.loadingPoint,
            formLoadingPointType: typeof formData.loadingPoint,
            availablePoints: getAvailableLoadingPoints().map(p => ({ id: p.id, idType: typeof p.id, name: p.name }))
          });
          
          const foundPoint = getAvailableLoadingPoints().find(p => p.id.toString() === formData.loadingPoint.toString());
          console.log('üéØ Found point:', foundPoint);
          
          return foundPoint?.name || '';
        })()
      };

      // Debug: –ª–æ–≥—É–≤–∞–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—É (–ü–Ü–°–õ–Ø –æ–±'—î–∫—Ç–∞!)
      console.log('üîç Debug region detection:', {
        formAddress: formData.address,
        addressDataRegion: addressData?.validation?.region,
        deliveryValidationRegion: deliveryValidation?.region,
        finalRegion: orderDataForSheets.region
      });

      // –í–∏–∑–Ω–∞—á–∞—î–º–æ –¥–∂–µ—Ä–µ–ª–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      const source = orderData?.source === 'services-page' ? 'services-page' : 'product-page';
      
      console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ Google Sheets:', {
        formData: orderDataForSheets,
        isConsultationMode,
        source,
        addressData,
        deliveryValidation
      });

      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ JSONP —Å–µ—Ä–≤—ñ—Å (–ë–ï–ó CORS –ø—Ä–æ–±–ª–µ–º)
      const result = await jsonpService.saveOrder(
        orderDataForSheets, 
        isConsultationMode, 
        source
      );

      if (result.success) {
        setSubmitResult(result);
        setShowSuccess(true);
        
        console.log('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', {
          orderId: result.orderId,
          manager: result.manager,
          mode: isConsultationMode ? 'consultation' : 'order',
          source: source,
          data: result.data
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–∑–±—ñ–ª—å—à–µ–Ω–æ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É)
        setTimeout(() => {
          handleClose();
        }, 5000);
      } else {
        throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è');
      }

    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', error);
      
      // –ü–æ–∫–∞–∑—É—î–º–æ –∑—Ä–æ–∑—É–º—ñ–ª—É –ø–æ–º–∏–ª–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
      let errorMessage = '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.';
      
      if (error.message.includes('–ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö')) {
        errorMessage = '–¢–∏–º—á–∞—Å–æ–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Å–µ—Ä–≤–µ—Ä–æ–º. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω –∞–±–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –Ω–∞–º.';
      } else if (error.message.includes('–≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')) {
        errorMessage = error.message;
      } else if (error.message.includes('–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤')) {
        errorMessage = '–ù–∞—Ä–∞–∑—ñ –≤—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ –∑–∞–π–Ω—è—Ç—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –Ω–∞–º –∞–±–æ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.';
      } else if (error.message.includes('OVER_QUERY_LIMIT')) {
        errorMessage = '–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω –∞–±–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –Ω–∞–º.';
      }
      
      setErrors({ submit: errorMessage });
      
      // –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏
      console.error('–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', {
        message: error.message,
        stack: error.stack,
        formData: formData,
        timestamp: new Date().toISOString()
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—É–Ω–∫—Ç—ñ–≤ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  const getAvailableLoadingPoints = () => {
    if (!formData.product) return [];
    return getLoadingPointsByProduct(formData.product);
  };

  if (!isOpen) return null;

  return (
    <div className="order-modal-overlay" onClick={handleClose}>
      <div className="order-modal" onClick={(e) => e.stopPropagation()}>
        {/* Header */}
        <div className="order-modal-header">
          <h2 className="order-modal-title">{modalTitle}</h2>
          <p className="order-modal-subtitle">
            {isConsultationMode ? (
              modalSubtitle
            ) : (
              <>
                {modalSubtitle.split('073 9 27 27 00')[0]}
                <a href="tel:+380739272700" className="phone-link">
                  073 9 27 27 00
                </a>
              </>
            )}
          </p>
          <button onClick={handleClose} className="order-close-btn">
            <svg viewBox="0 0 24 24" fill="none">
              <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
          </button>
        </div>

        {/* Body */}
        <div className="order-modal-body">
          {showSuccess ? (
            <div className="order-success">
              <svg className="order-success-icon" viewBox="0 0 24 24" fill="none">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                <polyline points="22,4 12,14.01 9,11.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
              <h3>{isConsultationMode ? '–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!' : '–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!'}</h3>
              <p>
                {submitResult ? (
                  <>
                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.<br/>
                    <strong>–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: #{submitResult.orderId}</strong><br/>
                    <strong>–í–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä: {submitResult.manager}</strong><br/>
                    –û—á—ñ–∫—É–π—Ç–µ –¥–∑–≤—ñ–Ω–æ–∫ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.
                  </>
                ) : (
                  <>
                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.<br/>
                    –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.
                  </>
                )}
              </p>
              
              {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
              {submitResult && submitResult.data && (
                <div style={{
                  marginTop: '20px',
                  padding: '15px',
                  backgroundColor: 'rgba(0, 128, 128, 0.05)',
                  borderRadius: '8px',
                  fontSize: '0.9rem',
                  color: '#495057'
                }}>
                  <div><strong>–î–∞—Ç–∞:</strong> {submitResult.data.Date} –æ {submitResult.data.Time}</div>
                  {submitResult.data.Product && (
                    <div><strong>–ü—Ä–æ–¥—É–∫—Ç:</strong> {products.find(p => p.id === submitResult.data.Product)?.name || submitResult.data.Product}</div>
                  )}
                  {submitResult.data.Delivery_Type && (
                    <div><strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> {submitResult.data.Delivery_Type === 'delivery' ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤–∏–≤—ñ–∑'}</div>
                  )}
                  <div><strong>–†–µ–∂–∏–º:</strong> {submitResult.data.Mode === 'consultation' ? '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è' : '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è'}</div>
                </div>
              )}
            </div>
          ) : (
            <form onSubmit={handleSubmit} className="order-form">
              {/* –Ü–º'—è */}
              <div className="form-group">
                <label className="form-label required">–í–∞—à–µ —ñ–º'—è</label>
                <input
                  ref={firstInputRef}
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleNameInput}
                  className={`form-input ${errors.name ? 'error' : ''}`}
                  placeholder="–Ü–≤–∞–Ω –Ü–≤–∞–Ω–µ–Ω–∫–æ"
                  disabled={isSubmitting}
                  maxLength="50"
                />
                {errors.name && <div className="form-error">{errors.name}</div>}
                {errors.nameWarning && (
                  <div className="form-warning" style={{
                    color: '#FFA500',
                    fontSize: '0.875rem',
                    marginTop: '4px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '4px'
                  }}>
                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" style={{ flexShrink: 0 }}>
                      <path d="M12 9v4" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M12 17h.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M12 1L3 21h18L12 1z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    {errors.nameWarning}
                  </div>
                )}
              </div>

              {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
              <div className="form-group">
                <label className="form-label required">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone}
                  onChange={handlePhoneInput}
                  className={`form-input ${errors.phone ? 'error' : ''}`}
                  placeholder="+38 (0__) ___-__-__"
                  disabled={isSubmitting}
                />
                {errors.phone && <div className="form-error">{errors.phone}</div>}
                <div style={{
                  fontSize: '0.8rem',
                  color: '#6c757d',
                  marginTop: '4px'
                }}>
                  –§–æ—Ä–º–∞—Ç–∏: +380671234567, 380671234567, 0671234567
                </div>
              </div>

              {/* Email */}
              <div className="form-group">
                <label className="form-label">Email</label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  className={`form-input ${errors.email ? 'error' : ''}`}
                  placeholder="your@email.com"
                  disabled={isSubmitting}
                />
                {errors.email && <div className="form-error">{errors.email}</div>}
              </div>

              {/* –ü–æ–ª—è –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –ù–ï –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è */}
              {!isConsultationMode && (
                <>
                  {/* –û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä */}
                  <div className="form-group">
                    <label className="form-label">–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä</label>
                    <select
                      name="product"
                      value={formData.product}
                      onChange={handleInputChange}
                      className="form-select"
                      disabled={isSubmitting}
                    >
                      <option value="">–ù–µ –æ–±—Ä–∞–Ω–æ</option>
                      {products.map(product => (
                        <option key={product.id} value={product.id}>
                          {product.name}
                        </option>
                      ))}
                    </select>
                    
                    {/* ‚úÖ –í–Ü–î–õ–ê–î–û–ß–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø (–º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø—ñ—Å–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è) */}
                    {orderData?.product && (
                      <div style={{
                        fontSize: '0.75rem',
                        color: '#6c757d',
                        marginTop: '4px',
                        padding: '4px 8px',
                        backgroundColor: '#f8f9fa',
                        borderRadius: '4px'
                      }}>
                        Debug: {orderData.product} ‚Üí {categoryMapping[orderData.product] || orderData.product}
                      </div>
                    )}
                  </div>

                  {/* –¢–∏–ø –æ—Ç—Ä–∏–º–∞–Ω–Ω—è */}
                  <div className="form-group">
                    <label className="form-label">–°–ø–æ—Å—ñ–± –æ—Ç—Ä–∏–º–∞–Ω–Ω—è</label>
                    <div className="radio-group">
                      <div className="radio-option">
                        <input
                          type="radio"
                          id="delivery"
                          name="deliveryType"
                          value="delivery"
                          checked={formData.deliveryType === 'delivery'}
                          onChange={handleInputChange}
                          disabled={isSubmitting}
                        />
                        <label htmlFor="delivery">–î–æ—Å—Ç–∞–≤–∫–∞</label>
                      </div>
                      <div className="radio-option">
                        <input
                          type="radio"
                          id="pickup"
                          name="deliveryType"
                          value="pickup"
                          checked={formData.deliveryType === 'pickup'}
                          onChange={handleInputChange}
                          disabled={isSubmitting}
                        />
                        <label htmlFor="pickup">–°–∞–º–æ–≤–∏–≤—ñ–∑</label>
                      </div>
                    </div>
                  </div>

                  {/* –£–º–æ–≤–Ω—ñ –ø–æ–ª—è */}
                  {formData.deliveryType === 'delivery' && (
                    <div className="conditional-field">
                      <div className="form-group">
                        <label className="form-label">–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</label>
                        <AddressSearch
                          value={formData.address}
                          onChange={(value) => setFormData(prev => ({ ...prev, address: value }))}
                          onAddressSelect={handleAddressSelect}
                          error={errors.address}
                          disabled={isSubmitting}
                          placeholder="–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)..."
                        />
                        {errors.address && <div className="form-error">{errors.address}</div>}
                        
                        {/* –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –¥–æ—Å—Ç–∞–≤–∫–∏ */}
                        {deliveryValidation && (
                          <div style={{
                            marginTop: '8px',
                            padding: '8px 12px',
                            borderRadius: '6px',
                            fontSize: '0.85rem',
                            backgroundColor: deliveryValidation.available ? 
                              'rgba(40, 167, 69, 0.1)' : 'rgba(255, 193, 7, 0.1)',
                            color: deliveryValidation.available ? '#155724' : '#856404',
                            border: `1px solid ${deliveryValidation.available ? 
                              'rgba(40, 167, 69, 0.3)' : 'rgba(255, 193, 7, 0.3)'}`
                          }}>
                            <strong>{deliveryValidation.region}:</strong> {deliveryValidation.message}
                          </div>
                        )}
                        
                        <div style={{
                          fontSize: '0.825rem',
                          color: '#6c757d',
                          marginTop: '6px',
                          fontStyle: 'italic'
                        }}>
                          –ê–¥—Ä–µ—Å—É –º–æ–∂–Ω–∞ –Ω–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏ ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
                        </div>
                      </div>
                    </div>
                  )}

                  {formData.deliveryType === 'pickup' && formData.product && (
                    <div className="conditional-field">
                      <div className="form-group">
                        <label className="form-label">–ü—É–Ω–∫—Ç –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</label>
                        <select
                          name="loadingPoint"
                          value={formData.loadingPoint}
                          onChange={handleInputChange}
                          className={`form-select form-select-mobile-optimized ${errors.loadingPoint ? 'error' : ''}`}
                          disabled={isSubmitting}
                        >
                          <option value="">–ù–µ –æ–±—Ä–∞–Ω–æ</option>
                          {getAvailableLoadingPoints().map((point) => (
                            <option key={point.id} value={point.id}>
                              ‚¨§ {point.name} | {point.address}
                            </option>
                          ))}
                        </select>
                        {errors.loadingPoint && <div className="form-error">{errors.loadingPoint}</div>}
                        
                        <div style={{
                          fontSize: '0.825rem',
                          color: '#6c757d',
                          marginTop: '6px',
                          fontStyle: 'italic'
                        }}>
                          –ü—É–Ω–∫—Ç –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–∂–Ω–∞ –Ω–µ –æ–±–∏—Ä–∞—Ç–∏ ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–ø–æ–º–æ–∂–µ –æ–±—Ä–∞—Ç–∏ –Ω–∞–π–∑—Ä—É—á–Ω—ñ—à–∏–π
                        </div>
                      </div>
                    </div>
                  )}

                  {/* –ü—ñ–¥–∫–∞–∑–∫–∞ —è–∫—â–æ –æ–±—Ä–∞–Ω–æ —Å–∞–º–æ–≤–∏–≤—ñ–∑, –∞–ª–µ –Ω–µ –æ–±—Ä–∞–Ω–æ —Ç–æ–≤–∞—Ä */}
                  {formData.deliveryType === 'pickup' && !formData.product && (
                    <div className="conditional-field">
                      <div style={{
                        padding: '12px 16px',
                        backgroundColor: 'rgba(255, 165, 0, 0.08)',
                        border: '1px solid rgba(255, 165, 0, 0.3)',
                        borderRadius: '8px',
                        color: '#856404',
                        fontSize: '0.9rem',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '8px'
                      }}>
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#FFA500', flexShrink: 0 }}>
                          <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                          <path d="M12 16v-4" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                          <path d="M12 8h.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        </svg>
                        <span>–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—É–Ω–∫—Ç–∏ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</span>
                      </div>
                    </div>
                  )}
                </>
              )}

              {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
              <div className="form-group">
                <label className="form-label">–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</label>
                <textarea
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  className="form-textarea"
                  placeholder={messagePlaceholder}
                  disabled={isSubmitting}
                  rows="4"
                  maxLength="1000"
                />
                <div style={{
                  fontSize: '0.8rem',
                  color: '#6c757d',
                  marginTop: '4px',
                  textAlign: 'right'
                }}>
                  {formData.message.length}/1000 —Å–∏–º–≤–æ–ª—ñ–≤
                </div>
              </div>

              {/* –ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó */}
              {criticalErrors.length > 0 && !isSubmitting && (
                <div style={{
                  padding: '12px 16px',
                  backgroundColor: 'rgba(220, 53, 69, 0.08)',
                  border: '1px solid rgba(220, 53, 69, 0.3)',
                  borderRadius: '8px',
                  color: '#721c24',
                  fontSize: '0.9rem',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'flex-start',
                  gap: '8px'
                }}>
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#dc3545', flexShrink: 0, marginTop: '2px' }}>
                    <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                    <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" strokeWidth="2"/>
                    <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" strokeWidth="2"/>
                  </svg>
                  <div>
                    <div style={{ fontWeight: '600', marginBottom: '4px' }}>
                      –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏ —É —Ñ–æ—Ä–º—ñ:
                    </div>
                    <ul style={{ margin: 0, paddingLeft: '16px' }}>
                      {errors.name && <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–ª–µ "–Ü–º'—è"</li>}
                      {errors.phone && <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–ª–µ "–¢–µ–ª–µ—Ñ–æ–Ω"</li>}
                      {errors.email && <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ–ª–µ "Email"</li>}
                      {errors.address && <li>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏</li>}
                      {errors.submit && <li>{errors.submit}</li>}
                    </ul>
                  </div>
                </div>
              )}

              {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ */}
              {errors.submit && (
                <div style={{
                  padding: '12px 16px',
                  backgroundColor: 'rgba(220, 53, 69, 0.08)',
                  border: '1px solid rgba(220, 53, 69, 0.3)',
                  borderRadius: '8px',
                  color: '#721c24',
                  fontSize: '0.9rem',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'flex-start',
                  gap: '8px'
                }}>
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#dc3545', flexShrink: 0, marginTop: '2px' }}>
                    <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                    <path d="M12 8v4" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    <path d="M12 16h.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                  </svg>
                  <div>
                    <div style={{ fontWeight: '600', marginBottom: '4px' }}>
                      –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
                    </div>
                    <div>{errors.submit}</div>
                    <div style={{ marginTop: '8px', fontSize: '0.85rem', color: '#856404' }}>
                      üí° –í–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—Ç–µ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –Ω–∞–º: 
                      <a href="tel:+380739272700" style={{ color: '#008080', fontWeight: '600' }}>
                        073 9 27 27 00
                      </a>
                    </div>
                  </div>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∏ */}
              <div className="form-actions">
                <button
                  type="submit"
                  className="btn-order-submit"
                  disabled={isSubmitting}
                  style={{
                    opacity: isSubmitting ? 0.7 : 1,
                    cursor: isSubmitting ? 'not-allowed' : 'pointer'
                  }}
                >
                  {isSubmitting ? (
                    <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '8px' }}>
                      <div className="order-spinner"></div>
                      {isConsultationMode ? '–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞—è–≤–∫—É...' : '–°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...'}
                    </span>
                  ) : (
                    submitButtonText
                  )}
                </button>
                <button
                  type="button"
                  onClick={handleClose}
                  className="btn-order-cancel"
                  disabled={isSubmitting}
                >
                  –°–∫–∞—Å—É–≤–∞—Ç–∏
                </button>
              </div>

              {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ–±—Ä–æ–±–∫—É - –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ä–µ–∂–∏–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
              {!isConsultationMode && (
                <div style={{
                  fontSize: '0.875rem',
                  color: '#6c757d',
                  textAlign: 'left',
                  marginTop: '16px',
                  marginLeft: '16px',
                  lineHeight: '1.6',
                  display: 'flex',
                  flexDirection: 'column',
                  gap: '8px',
                  alignItems: 'flex-start'
                }}>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è –∑ 8:00 –¥–æ 20:00, –ø–Ω-—Å–±</span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <path d="M1 3h15v13H1z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <circle cx="6" cy="19" r="2" stroke="currentColor" strokeWidth="2"/>
                      <circle cx="20" cy="19" r="2" stroke="currentColor" strokeWidth="2"/>
                      <path d="M16 3v13h4.5l2-4V8h-4" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ø–∞—Ä—Ç—ñ—è - 1 –º–∞—à–∏–Ω–∞</span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                      <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M12 17h.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º</span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <path d="M9 12l2 2 4-4" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M21 12c-1 0-3-1-3-3s2-3 3-3 3 1 3 3-2 3-3 3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M3 12c1 0 3-1 3-3s-2-3-3-3-3 1-3 3 2 3 3 3" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–°–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –∑ –≥–∞—Ä–∞–Ω—Ç—ñ—î—é —è–∫–æ—Å—Ç—ñ</span>
                  </div>
                </div>
              )}

              {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é */}
              {isConsultationMode && (
                <div style={{
                  fontSize: '0.875rem',
                  color: '#6c757d',
                  textAlign: 'left',
                  marginTop: '16px',
                  marginLeft: '16px',
                  lineHeight: '1.6',
                  display: 'flex',
                  flexDirection: 'column',
                  gap: '8px',
                  alignItems: 'flex-start'
                }}>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –Ω–∞—à–∏—Ö –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤</span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                      <polyline points="12,6 12,12 16,14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–ó–≤'—è–∂–µ–º–æ—Å—è –ø—Ä–æ—Ç—è–≥–æ–º 15 —Ö–≤–∏–ª–∏–Ω</span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                      <path d="M9 11H1v8a2 2 0 0 0 2 2h8" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M13 21h8a2 2 0 0 0 2-2v-8h-8" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M13 3h8a2 2 0 0 1 2 2v8h-8" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      <path d="M1 11h8V3a2 2 0 0 0-2-2H3a2 2 0 0 0-2 2" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                    </svg>
                    <span>–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –≤–∞—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É</span>
                  </div>
                </div>
              )}

              {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –±–µ–∑–ø–µ–∫–∏ —Ç–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ */}
              <div style={{
                marginTop: '20px',
                padding: '12px 16px',
                backgroundColor: 'rgba(0, 128, 128, 0.05)',
                border: '1px solid rgba(0, 128, 128, 0.2)',
                borderRadius: '8px',
                fontSize: '0.8rem',
                color: '#495057',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}>
                <svg width="14" height="14" viewBox="0 0 24 24" fill="none" style={{ color: '#008080', flexShrink: 0 }}>
                  <rect x="3" y="11" width="18" height="11" rx="2" ry="2" stroke="currentColor" strokeWidth="2"/>
                  <circle cx="12" cy="16" r="1" stroke="currentColor" strokeWidth="2"/>
                  <path d="M7 11V7a5 5 0 1 1 10 0v4" stroke="currentColor" strokeWidth="2"/>
                </svg>
                <span>
                  –í–∞—à—ñ –¥–∞–Ω—ñ –∑–∞—Ö–∏—â–µ–Ω—ñ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤–∏–∫–ª—é—á–Ω–æ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </span>
              </div>
            </form>
          )}
        </div>
      </div>
    </div>
  );
};

export default OrderModal;