// src/components/APIKeyTest.js
import React, { useEffect, useState } from 'react';

const APIKeyTest = () => {
  const [apiStatus, setApiStatus] = useState({
    keyExists: false,
    keyLength: 0,
    googleLoaded: false,
    error: null
  });

  useEffect(() => {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API –∫–ª—é—á–∞
    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;
    
    console.log('=== –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê GOOGLE MAPS API ===');
    console.log('1. API Key:', apiKey ? '‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ' : '‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    console.log('2. API Key length:', apiKey?.length || 0);
    console.log('3. API Key preview:', apiKey ? `${apiKey.substring(0, 20)}...` : '–Ω–µ–º–∞—î');
    console.log('4. Environment:', process.env.REACT_APP_ENVIRONMENT);
    console.log('5. Debug mode:', process.env.REACT_APP_DEBUG_MODE);
    
    setApiStatus(prev => ({
      ...prev,
      keyExists: !!apiKey,
      keyLength: apiKey?.length || 0
    }));

    // –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Google Maps API
    if (apiKey) {
      console.log('6. –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Google Maps API...');
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
      if (window.google && window.google.maps) {
        console.log('7. ‚úÖ Google Maps API –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
        setApiStatus(prev => ({ ...prev, googleLoaded: true }));
        return;
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ API
      const script = document.createElement('script');
      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&language=uk&region=UA`;
      script.async = true;
      script.defer = true;
      
      script.onload = () => {
        console.log('8. ‚úÖ Google Maps API —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
        console.log('9. üéØ Places API –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è');
        console.log('10. üöÄ AddressSearch –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏!');
        setApiStatus(prev => ({ ...prev, googleLoaded: true }));
      };
      
      script.onerror = (error) => {
        console.error('9. ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Google Maps API:', error);
        setApiStatus(prev => ({ ...prev, error: '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è API' }));
      };
      
      document.head.appendChild(script);
      console.log('7. –°–∫—Ä–∏–ø—Ç Google Maps –¥–æ–¥–∞–Ω–æ –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏');
    }
  }, []);

  return (
    <div style={{ 
      padding: '20px', 
      background: '#f0f8ff', 
      border: '2px solid #008080',
      borderRadius: '10px',
      margin: '20px',
      fontFamily: 'monospace'
    }}>
      <h2 style={{ color: '#008080', marginBottom: '15px' }}>üîç –°—Ç–∞—Ç—É—Å Google Maps API</h2>
      
      <div style={{ marginBottom: '10px' }}>
        <strong>API –ö–ª—é—á:</strong> {apiStatus.keyExists ? '‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ' : '‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}
        {apiStatus.keyExists && <span> (–¥–æ–≤–∂–∏–Ω–∞: {apiStatus.keyLength})</span>}
      </div>
      
      <div style={{ marginBottom: '10px' }}>
        <strong>Google Maps –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:</strong> {apiStatus.googleLoaded ? '‚úÖ –¢–∞–∫' : '‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...'}
      </div>
      
      <div style={{ marginBottom: '10px' }}>
        <strong>Places API:</strong> {apiStatus.googleLoaded ? '‚úÖ –ì–æ—Ç–æ–≤–∏–π' : '‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è...'}
      </div>

      {apiStatus.error && (
        <div style={{ marginBottom: '10px', color: 'red' }}>
          <strong>–ü–æ–º–∏–ª–∫–∞:</strong> {apiStatus.error}
        </div>
      )}

      {apiStatus.googleLoaded && (
        <div style={{ 
          marginTop: '15px', 
          padding: '10px', 
          background: '#d4edda', 
          borderRadius: '5px',
          color: '#155724'
        }}>
          <strong>üéâ –ì–æ—Ç–æ–≤–æ!</strong> AddressSearch –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
        </div>
      )}
      
      <div style={{ marginTop: '15px' }}>
        <button 
          onClick={() => {
            console.clear();
            window.location.reload();
          }}
          style={{
            padding: '10px 20px',
            background: '#FFA500',
            color: 'white',
            border: 'none',
            borderRadius: '5px',
            cursor: 'pointer'
          }}
        >
          üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
        </button>
      </div>
      
      <div style={{ marginTop: '15px', fontSize: '12px', color: '#666' }}>
        üí° –í—ñ–¥–∫—Ä–∏–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
      </div>
    </div>
  );
};

export default APIKeyTest;