/**
 * ü§ñ TELEGRAM SERVICE –î–õ–Ø COMSPEC
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å –≤ Telegram —á–µ—Ä–µ–∑ Bot API
 * 
 * –ï—Ç–∞–ø 1: –ë–∞–∑–æ–≤–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
 */

import config from '../config/environment';

class TelegramService {
  constructor() {
    this.botToken = config.TELEGRAM_BOT_TOKEN;
    this.chatId = config.TELEGRAM_CHAT_ID; // Fallback —á–∞—Ç
    this.enabled = config.TELEGRAM_ENABLED;
    this.apiUrl = config.TELEGRAM_API_URL;
    this.timeout = config.TELEGRAM_TIMEOUT || 10000;
    this.managers = config.TELEGRAM_MANAGERS || {};
    
    // –õ–æ–≥—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    console.log('[TelegramService] ‚úÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    console.log('[TelegramService] ü§ñ Bot enabled:', this.enabled);
    console.log('[TelegramService] üåê –°–µ—Ä–µ–¥–æ–≤–∏—â–µ:', config.ENVIRONMENT);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    if (!this.botToken) {
      console.warn('[TelegramService] ‚ö†Ô∏è Bot token –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }
    
    if (!this.chatId) {
      console.warn('[TelegramService] ‚ö†Ô∏è Chat ID –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }
    
    // –î–æ–¥–∞—î–º–æ —Å–µ—Ä–≤—ñ—Å –¥–æ window –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    if (typeof window !== 'undefined') {
      window.telegramService = this;
    }
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ Telegram —Å–µ—Ä–≤—ñ—Å —É–≤—ñ–º–∫–Ω–µ–Ω–∏–π
   */
  isEnabled() {
    return this.enabled && this.botToken;
  }

  /**
   * üÜï –ï–¢–ê–ü 3: –ü–æ—à—É–∫ Chat ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —ñ–º–µ–Ω—ñ
   */
  findManagerChatId(managerName) {
    if (!managerName || typeof managerName !== 'string') {
      return null;
    }
    
    // –¢–æ—á–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —ñ–º–µ–Ω—ñ
    if (this.managers[managerName]) {
      return this.managers[managerName];
    }
    
    // –ü–æ—à—É–∫ –ø–æ —á–∞—Å—Ç–∏–Ω—ñ —ñ–º–µ–Ω—ñ (—è–∫—â–æ –≤ Google Sheets —ñ–Ω—à–∏–π —Ñ–æ—Ä–º–∞—Ç)
    const normalizedName = managerName.toLowerCase().trim();
    
    for (const [name, chatId] of Object.entries(this.managers)) {
      if (name.toLowerCase().includes(normalizedName) || 
          normalizedName.includes(name.toLowerCase())) {
        console.log(`[TelegramService] üîç –ó–Ω–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: "${managerName}" ‚Üí "${name}" (${chatId})`);
        return chatId;
      }
    }
    
    console.warn(`[TelegramService] ‚ö†Ô∏è Chat ID –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ "${managerName}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    return null;
  }

  /**
   * üÜï –ï–¢–ê–ü 3: –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä—É
   */
  async sendPersonalMessage(managerName, message) {
    const chatId = this.findManagerChatId(managerName);
    
    if (chatId) {
      console.log(`[TelegramService] üì§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è ${managerName} (${chatId})`);
      return await this.sendMessage(message, chatId);
    } else {
      console.warn(`[TelegramService] ‚ö†Ô∏è Fallback: –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç`);
      return await this.sendMessage(message, this.chatId);
    }
  }

  /**
   * –ë–∞–∑–æ–≤–∏–π HTTP –∑–∞–ø–∏—Ç –¥–æ Telegram Bot API
   */
  async makeRequest(method, params = {}) {
    if (!this.isEnabled()) {
      throw new Error('Telegram service –≤–∏–º–∫–Ω–µ–Ω–∏–π –∞–±–æ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }

    const url = `${this.apiUrl}${this.botToken}/${method}`;
    
    console.log(`[TelegramService] üì° –ó–∞–ø–∏—Ç: ${method}`);
    
    try {
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), this.timeout);
      
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json; charset=utf-8',
        },
        body: JSON.stringify(params),
        signal: controller.signal
      });
      
      clearTimeout(timeoutId);
      
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }
      
      const data = await response.json();
      
      if (!data.ok) {
        throw new Error(`Telegram API –ø–æ–º–∏–ª–∫–∞: ${data.description}`);
      }
      
      console.log(`[TelegramService] ‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –∑–∞–ø–∏—Ç: ${method}`);
      return data.result;
    } catch (error) {
      console.error(`[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ ${method}:`, error);
      throw error;
    }
  }

  /**
   * –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Bot API
   */
  async testConnection() {
    try {
      console.log('[TelegramService] üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...');
      
      const result = await this.makeRequest('getMe');
      
      console.log('[TelegramService] ‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!');
      console.log('[TelegramService] ü§ñ Bot info:', {
        username: result.username,
        first_name: result.first_name,
        id: result.id
      });
      
      return {
        success: true,
        bot: result,
        message: '–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Telegram Bot API —É—Å–ø—ñ—à–Ω–µ'
      };
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error);
      return {
        success: false,
        error: error.message,
        message: '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ Telegram Bot API'
      };
    }
  }

  /**
   * –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
   */
  async sendTestMessage(chatId = null) {
    const targetChatId = chatId || this.chatId;
    
    if (!targetChatId) {
      throw new Error('Chat ID –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }
    
    const message = `üß™ –¢–ï–°–¢–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø COMSPEC
    
üïí –ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
ü§ñ Bot: @COMSPEC_Orders_bot
üåê –°–µ—Ä–µ–¥–æ–≤–∏—â–µ: ${config.ENVIRONMENT}
    
‚úÖ Telegram —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î!`;

    try {
      const result = await this.makeRequest('sendMessage', {
        chat_id: targetChatId,
        text: message,
        parse_mode: 'HTML'
      });
      
      console.log('[TelegramService] ‚úÖ –¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
      return {
        success: true,
        messageId: result.message_id,
        message: '–¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ'
      };
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
      throw error;
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —á–∞—Ç
   */
  async getChatInfo(chatId = null) {
    const targetChatId = chatId || this.chatId;
    
    if (!targetChatId) {
      throw new Error('Chat ID –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }
    
    try {
      const result = await this.makeRequest('getChat', {
        chat_id: targetChatId
      });
      
      console.log('[TelegramService] ‚úÖ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —á–∞—Ç –æ—Ç—Ä–∏–º–∞–Ω–∞');
      return {
        success: true,
        chat: result,
        message: '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —á–∞—Ç –æ—Ç—Ä–∏–º–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ'
      };
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —á–∞—Ç:', error);
      throw error;
    }
  }

  /**
   * –ë–∞–∑–æ–≤–∏–π –º–µ—Ç–æ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–±—É–¥–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ –≤ –ï—Ç–∞–ø—ñ 2)
   */
  async sendMessage(text, chatId = null, parseMode = null) {
    const targetChatId = chatId || this.chatId;
    
    if (!targetChatId) {
      throw new Error('Chat ID –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π');
    }
    
    const params = {
      chat_id: targetChatId,
      text: text
    };
    
    if (parseMode) {
      params.parse_mode = parseMode;
    }
    
    try {
      const result = await this.makeRequest('sendMessage', params);
      
      return {
        success: true,
        messageId: result.message_id,
        message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ'
      };
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
      throw error;
    }
  }

  /**
   * üÜï –ï–¢–ê–ü 3: –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–û–ù–û–í–õ–ï–ù–û –î–õ–Ø GOOGLE APPS SCRIPT)
   */
  async sendOrderNotification(orderData) {
    console.log('[TelegramService] üìã –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', orderData);
    
    if (!this.isEnabled()) {
      console.warn('[TelegramService] ‚ö†Ô∏è Telegram –≤–∏–º–∫–Ω–µ–Ω–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∫—É');
      return {
        success: false,
        message: 'Telegram —Å–µ—Ä–≤—ñ—Å –≤–∏–º–∫–Ω–µ–Ω–∏–π'
      };
    }
    
    try {
      // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      const message = this.formatOrderMessage(orderData);
      
      // üÜï –ï–¢–ê–ü 3: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Chat ID –∑ Google Apps Script
      let results = [];
      
      if (orderData.manager) {
        console.log(`[TelegramService] üë®‚Äçüíº –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É: ${orderData.manager}`);
        
        // üÜï –ù–û–í–ò–ù–ö–ê: Chat ID –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑ Google Apps Script
        const managerChatId = orderData.managerTelegramChatId;
        
        if (managerChatId) {
          console.log(`[TelegramService] üì± Chat ID –∑ Google Apps Script: ${managerChatId}`);
          
          try {
            const personalResult = await this.sendMessage(message, managerChatId);
            results.push({
              target: 'personal',
              manager: orderData.manager,
              chatId: managerChatId,
              source: 'google_apps_script',
              ...personalResult
            });
            
            console.log(`[TelegramService] ‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ${orderData.manager} (${managerChatId})`);
          } catch (error) {
            console.error(`[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:`, error);
            
            // Fallback: –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç
            if (this.chatId) {
              console.log('[TelegramService] üîÑ Fallback: –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç');
              const fallbackResult = await this.sendMessage(message, this.chatId);
              results.push({
                target: 'fallback_group',
                chatId: this.chatId,
                reason: 'personal_message_failed',
                ...fallbackResult
              });
            }
          }
        } else {
          // –ù–µ–º–∞—î Chat ID –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç
          console.warn(`[TelegramService] ‚ö†Ô∏è –ù–µ–º–∞—î Chat ID –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ${orderData.manager}`);
          
          if (this.chatId) {
            console.log('[TelegramService] üîÑ Fallback: –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç (–Ω–µ–º–∞—î Chat ID)');
            const fallbackResult = await this.sendMessage(message, this.chatId);
            results.push({
              target: 'fallback_no_chatid',
              chatId: this.chatId,
              manager: orderData.manager,
              reason: 'manager_no_chatid',
              ...fallbackResult
            });
          }
        }
      } else {
        // –ù–µ–º–∞—î –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç
        if (this.chatId) {
          console.log('[TelegramService] üì§ –ù–µ–º–∞—î –º–µ–Ω–µ–¥–∂–µ—Ä–∞, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç');
          const result = await this.sendMessage(message, this.chatId);
          results.push({
            target: 'group_no_manager',
            chatId: this.chatId,
            ...result
          });
        }
      }
      
      return {
        success: results.length > 0,
        results: results,
        message: `–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: ${results.map(r => r.target).join(', ')}`
      };
      
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', error);
      
      // –ù–ï –∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É - Telegram –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –±–ª–æ–∫—É–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å
      return {
        success: false,
        error: error.message,
        message: '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ)'
      };
    }
  }

  /**
   * –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫
   */
  async sendFeedbackNotification(feedbackData) {
    console.log('[TelegramService] üìã –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤\'—è–∑–∫—É:', feedbackData);
    
    if (!this.isEnabled()) {
      console.warn('[TelegramService] ‚ö†Ô∏è Telegram –≤–∏–º–∫–Ω–µ–Ω–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∫—É');
      return {
        success: false,
        message: 'Telegram —Å–µ—Ä–≤—ñ—Å –≤–∏–º–∫–Ω–µ–Ω–∏–π'
      };
    }
    
    try {
      // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      const message = this.formatFeedbackMessage(feedbackData);
      
      let results = [];
      
      if (feedbackData.manager && feedbackData.managerTelegramChatId) {
        console.log(`[TelegramService] üë®‚Äçüíº –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É: ${feedbackData.manager}`);
        console.log(`[TelegramService] üì± Chat ID: ${feedbackData.managerTelegramChatId}`);
        
        try {
          const personalResult = await this.sendMessage(message, feedbackData.managerTelegramChatId);
          results.push({
            target: 'personal',
            manager: feedbackData.manager,
            chatId: feedbackData.managerTelegramChatId,
            ...personalResult
          });
          console.log(`[TelegramService] ‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ${feedbackData.manager} (${feedbackData.managerTelegramChatId})`);
        } catch (error) {
          console.error(`[TelegramService] ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${error.message}`);
          results.push({
            target: 'personal',
            manager: feedbackData.manager,
            error: error.message
          });
        }
      }
      
      return {
        success: results.some(r => r.success),
        results: results,
        message: results.some(r => r.success) ? 
          '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: personal' : 
          '–ü–æ–º–∏–ª–∫–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å'
      };
      
    } catch (error) {
      console.error('[TelegramService] ‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', error);
      return {
        success: false,
        error: error.message,
        message: '–ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram'
      };
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫
   */
  formatFeedbackMessage(feedbackData) {
    const { feedbackData: data } = feedbackData;
    
    return `–ù–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –ó–í–û–†–û–¢–ù–û–ì–û –ó–í'–Ø–ó–ö–£

–Ü–º'—è: ${data.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
Email: ${data.email || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}

–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:
${data.message}

–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}
–î–∂–µ—Ä–µ–ª–æ: –§–æ—Ä–º–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É`;
  }

  /**
   * ‚úÖ –ï–¢–ê–ü 2: –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
   */
  formatOrderMessage(orderData) {
    const {
      orderId,
      manager,
      orderData: data,
      isConsultation
    } = orderData;
    
    // –ë–µ–∑–ø–µ—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–∞–Ω–∏—Ö
    if (!data || typeof data !== 'object') {
      console.error('[TelegramService] ‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', { orderData, data });
      return `‚ùå –ü–û–ú–ò–õ–ö–ê –§–û–†–ú–ê–¢–£–í–ê–ù–ù–Ø\n–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #${orderId || '–ù–µ–≤—ñ–¥–æ–º–æ'}\n–ú–µ–Ω–µ–¥–∂–µ—Ä: ${manager || '–ù–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ'}`;
    }
    
    // –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    const orderType = isConsultation ? '–ö–û–ù–°–£–õ–¨–¢–ê–¶–Ü–Ø' : '–ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø';
    const orderNumber = orderId || '–ì–µ–Ω–µ—Ä—É—î—Ç—å—Å—è...';
    
    // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    let message = `${orderType} #${orderNumber}\n\n`;
    
    // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    message += `–ö–ª—ñ—î–Ω—Ç: ${data.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n`;
    message += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n`;
    
    if (data.email) {
      message += `Email: ${data.email}\n`;
    }
    
    message += '\n';
    
    // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    if (!isConsultation) {
      if (data.product) {
        message += `–¢–æ–≤–∞—Ä: ${data.product}\n`;
      }
      
      if (data.deliveryType) {
        const deliveryText = data.deliveryType === 'delivery' ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤–∏–≤—ñ–∑';
        message += `–¢–∏–ø: ${deliveryText}\n`;
      }
      
      if (data.address) {
        message += `–ê–¥—Ä–µ—Å–∞: ${data.address}\n`;
      }
      
      if (data.region) {
        message += `–†–µ–≥—ñ–æ–Ω: ${data.region}\n`;
      }
      
      if (data.loadingPoint || data.Loading_Point) {
        message += `–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${data.loadingPoint || data.Loading_Point}\n`;
      }
    }
    
    if (data.message) {
      message += `–ö–æ–º–µ–Ω—Ç–∞—Ä: ${data.message}\n`;
    }
    
    message += '\n';
    
    // –°–∏—Å—Ç–µ–º–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    message += `–ß–∞—Å: ${new Date().toLocaleString('uk-UA')}\n`;
    
    if (manager) {
      message += `–ú–µ–Ω–µ–¥–∂–µ—Ä: ${manager}\n`;
    }
    
    message += `–î–∂–µ—Ä–µ–ª–æ: –°–∞–π—Ç (—Ñ–æ—Ä–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)`;
    
    return message;
  }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤—ñ—Å—É
const telegramService = new TelegramService();

// –¢–µ—Å—Ç–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è window
if (typeof window !== 'undefined') {
  
  // –ë–∞–∑–æ–≤–∏–π —Ç–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  window.testTelegramConnection = async () => {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Telegram –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...');
    try {
      const result = await telegramService.testConnection();
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É:', result);
      return result;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É:', error);
      return {
        success: false,
        error: error.message
      };
    }
  };
  
  // –¢–µ—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–ø–æ—Ç—Ä–µ–±—É—î Chat ID)
  window.testTelegramMessage = async (chatId) => {
    if (!chatId) {
      console.error('‚ùå –ü–æ—Ç—Ä—ñ–±–µ–Ω Chat ID –¥–ª—è —Ç–µ—Å—Ç—É. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: testTelegramMessage("YOUR_CHAT_ID")');
      return;
    }
    
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');
    try {
      const result = await telegramService.sendTestMessage(chatId);
      console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É:', result);
      return result;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É:', error);
      return {
        success: false,
        error: error.message
      };
    }
  };
  
  // üÜï –ï–¢–ê–ü 2: –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  window.testOrderFormatting = (chatId) => {
    const mockOrderData = {
      orderId: '#12345',
      manager: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–µ–Ω–∫–æ',
      isConsultation: false,
      orderData: {
        name: '–Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤–∏—á –¢–µ—Å—Ç–µ–Ω–∫–æ',
        phone: '+380671234567',
        email: 'test@comspec.ua',
        product: '–©–µ–±—ñ–Ω—å —Ñ—Ä–∞–∫—Ü—ñ—è 5-20–º–º',
        deliveryType: 'delivery',
        address: '–º. –ö–∏—ó–≤, –≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 1',
        region: '–ö–∏—ó–≤',
        loadingPoint: "–¢–î–í ¬´–Ü–≥–Ω–∞—Ç–ø—ñ–ª—å—Å—å–∫–∏–π –∫–∞—Ä'—î—Ä¬ª",
        message: '–ü–æ—Ç—Ä—ñ–±–Ω–æ 5 —Ç–æ–Ω–Ω, –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ 16:00',
        source: 'Website'
      }
    };
    
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...');
    const formattedMessage = telegramService.formatOrderMessage(mockOrderData);
    console.log('üìã –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:');
    console.log(formattedMessage);
    
    if (chatId) {
      console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ —á–∞—Ç:', chatId);
      return telegramService.sendOrderNotification({
        ...mockOrderData,
        chatId: chatId
      });
    }
    
    return {
      success: true,
      formattedMessage: formattedMessage
    };
  };
  
  // üÜï –ï–¢–ê–ü 2: –¢–µ—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó
  window.testConsultationFormatting = (chatId) => {
    const mockConsultationData = {
      orderId: '#C12345',
      manager: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
      isConsultation: true,
      orderData: {
        name: '–ü–µ—Ç—Ä–æ –ü–µ—Ç—Ä–µ–Ω–∫–æ',
        phone: '+380509876543',
        email: 'petro@example.com',
        message: '–•–æ—á—É –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ —Ü—ñ–Ω–∏ –Ω–∞ –±–µ—Ç–æ–Ω –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –±—É–¥–∏–Ω–∫—É',
        source: 'Services-page'
      }
    };
    
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó...');
    const formattedMessage = telegramService.formatOrderMessage(mockConsultationData);
    console.log('üìã –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:');
    console.log(formattedMessage);
    
    if (chatId) {
      console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –≤ —á–∞—Ç:', chatId);
      return telegramService.sendOrderNotification({
        ...mockConsultationData,
        chatId: chatId
      });
    }
    
    return {
      success: true,
      formattedMessage: formattedMessage
    };
  };
  
  // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ—Ä–≤—ñ—Å
  window.TELEGRAM_SERVICE_INFO = {
    enabled: telegramService.enabled,
    hasBotToken: !!telegramService.botToken,
    hasChatId: !!telegramService.chatId,
    environment: config.ENVIRONMENT,
    version: 'Telegram Service v1.0 - –ï—Ç–∞–ø 1'
  };
  
  console.log('[TelegramService] üéØ –¢–µ—Å—Ç–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ–¥–∞–Ω–æ –¥–æ window:');
  console.log('  - testTelegramConnection() - —Ç–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è');
  console.log('  - testTelegramMessage("CHAT_ID") - —Ç–µ—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è');
  console.log('  - testOrderFormatting("CHAT_ID") - —Ç–µ—Å—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è');
  console.log('  - testConsultationFormatting("CHAT_ID") - —Ç–µ—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó');
  console.log('  - window.TELEGRAM_SERVICE_INFO - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Ä–≤—ñ—Å');
}

export default telegramService;