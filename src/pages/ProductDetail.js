import React, { useState, useEffect } from 'react';
import { useParams, useNavigate, Link } from 'react-router-dom';
import { useOrderModal } from '../context/OrderModalContext';
import ProductsAPI, { formatProductPriceParts, getImageUrl } from '../data/products/productsAPI.js';
import ProductTitle from '../components/ProductTitle';

const ProductDetail = () => {
  const { category, id } = useParams();
  const navigate = useNavigate();
  const { openOrderModal } = useOrderModal();
  const [product, setProduct] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    try {
      // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–æ–≤–∞—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ ID
      const foundProduct = ProductsAPI.getAllProducts().find(p => 
        p.category === category && p.id === id
      );

      if (foundProduct) {
        setProduct(foundProduct);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –º–µ—Ç–∞–¥–∞–Ω—ñ –¥–ª—è SEO
        if (foundProduct.seo) {
          document.title = foundProduct.seo.metaTitle || `${foundProduct.title} | COMSPEC`;
          
          // –û–Ω–æ–≤–ª—é—î–º–æ meta description
          const metaDescription = document.querySelector('meta[name="description"]');
          if (metaDescription && foundProduct.seo.metaDescription) {
            metaDescription.setAttribute('content', foundProduct.seo.metaDescription);
          }
        }
      } else {
        // –¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ç–æ–≤–∞—Ä—ñ–≤
        navigate('/products', { replace: true });
        return;
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É:', error);
      navigate('/products', { replace: true });
      return;
    }
    
    setLoading(false);
  }, [category, id, navigate]);

  const handleOrderClick = () => {
    if (product) {
      openOrderModal({
        product: product.title,
        productTitle: product.title,
        source: 'product-detail-page'
      });
    }
  };

  const handleBackClick = () => {
    navigate('/products');
  };

  if (loading) {
    return (
      <div style={{
        textAlign: 'center',
        padding: '3rem',
        color: '#6c757d'
      }}>
        <div style={{
          display: 'inline-block',
          width: '40px',
          height: '40px',
          border: '4px solid #f3f3f3',
          borderTop: '4px solid #008080',
          borderRadius: '50%',
          animation: 'spin 1s linear infinite',
          marginBottom: '1rem'
        }}></div>
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É...</p>
      </div>
    );
  }

  if (!product) {
    return (
      <div className="container" style={{ padding: '2rem 2rem' }}>
        <div style={{ textAlign: 'center', padding: '3rem', color: '#6c757d' }}>
          <h2>–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h2>
          <p>–í–∏–±–∞—á—Ç–µ, –∑–∞–ø–∏—Ç—É–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π.</p>
          <Link to="/products" className="btn btn-primary">
            –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É
          </Link>
        </div>
      </div>
    );
  }

  const priceParts = formatProductPriceParts(product);

  return (
    <div className="container" style={{ padding: '2rem 2rem' }}>
      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å */}
      <div className="breadcrumb-nav">
        <Link to="/" className="breadcrumb-link">–ì–æ–ª–æ–≤–Ω–∞</Link>
        <span style={{ color: '#6c757d' }}>‚Ä∫</span>
        <Link to="/products" className="breadcrumb-link">–ü—Ä–æ–¥—É–∫—Ü—ñ—è</Link>
        <span style={{ color: '#6c757d' }}>‚Ä∫</span>
        <Link 
          to={`/products?category=${product.category}`} 
          className="breadcrumb-link"
        >
          {product.categoryName}
        </Link>
        <span style={{ color: '#6c757d' }}>‚Ä∫</span>
        <ProductTitle 
          title={product.shortTitle || product.title}
          tag="span"
          style={{ color: '#6c757d' }}
        />
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
      <button 
        onClick={handleBackClick}
        className="back-button"
      >
        ‚Üê –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É
      </button>

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–≤–∞—Ä—É */}
      <div className="product-content">
        {/* –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É */}
        <div>
          <div 
            className="product-image"
          >
            {product.image ? (
              <img 
                src={getImageUrl(product.image)} 
                alt={product.imageAlt || product.title}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'cover'
                }}
              />
            ) : (
              <div style={{ textAlign: 'center' }}>
                <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üì¶</div>
                <p>–§–æ—Ç–æ —Ç–æ–≤–∞—Ä—É</p>
              </div>
            )}
          </div>
        </div>

        {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–æ–≤–∞—Ä */}
        <div>
          <ProductTitle 
            title={product.title}
            tag="h1"
            className="product-title"
          />

          {/* –¶—ñ–Ω–∞ */}
          <div className="product-price">
            <span style={{ whiteSpace: 'nowrap' }}>
              {priceParts.priceNumber} {priceParts.currency}
            </span>
            {priceParts.validUntil && (
              <>
                {' '}
                <span style={{ whiteSpace: 'nowrap' }}>
                  {priceParts.validUntil}
                </span>
              </>
            )}
          </div>

          {/* –ù–∞—è–≤–Ω—ñ—Å—Ç—å */}
          <div style={{
            padding: '0.5rem 1rem',
            borderRadius: '20px',
            display: 'inline-block',
            marginBottom: '1.5rem',
            fontSize: '0.9rem',
            fontWeight: '500',
            backgroundColor: product.inStock ? '#d4edda' : '#f8d7da',
            color: product.inStock ? '#155724' : '#721c24'
          }}>
            {product.inStock ? '‚úì –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' : '‚úó –ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ'}
          </div>

          {/* –ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å */}
          <p style={{ 
            fontSize: '1.1rem', 
            lineHeight: '1.6',
            marginBottom: '2rem',
            color: '#2c3e50'
          }}>
            {product.description}
          </p>

          {/* –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ */}
          {product.properties && product.properties.length > 0 && (
            <div style={{ marginBottom: '2rem' }}>
              <h3 style={{ marginBottom: '1rem', color: '#2c3e50' }}>–ö–ª—é—á–æ–≤—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:</h3>
              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>
                {product.properties.map((prop, index) => (
                  <span
                    key={index}
                    style={{
                      display: 'inline-block',
                      background: '#e9ecef',
                      padding: '0.5rem 1rem',
                      borderRadius: '20px',
                      fontSize: '0.9rem'
                    }}
                  >
                    {prop}
                  </span>
                ))}
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π */}
          <div style={{
            display: 'flex',
            gap: '1rem',
            marginBottom: '2rem'
          }}>
            <button 
              className="btn btn-accent"
              onClick={handleOrderClick}
              style={{
                fontSize: '1.1rem',
                padding: '0.8rem 2rem'
              }}
            >
              –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–æ–≤–∞—Ä
            </button>
            <Link 
              to={`/certificates/${product.category}`} 
              className="btn btn-primary"
              style={{
                fontSize: '1.1rem',
                padding: '0.8rem 2rem',
                textDecoration: 'none',
                display: 'inline-block'
              }}
            >
              –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏
            </Link>
          </div>

          {/* –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ */}
          {product.certificates && product.certificates.length > 0 && (
            <div style={{ marginBottom: '1.5rem' }}>
              <h4 style={{ marginBottom: '0.5rem', color: '#2c3e50' }}>–°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏:</h4>
              <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>
                {product.certificates.map((cert, index) => (
                  <span
                    key={index}
                    style={{
                      display: 'inline-block',
                      background: '#008080',
                      color: 'white',
                      padding: '0.25rem 0.75rem',
                      borderRadius: '15px',
                      fontSize: '0.8rem',
                      fontWeight: '500'
                    }}
                  >
                    {cert.toUpperCase()}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å */}
      {product.detailedDescription && (
        <div style={{
          backgroundColor: '#f8f9fa',
          padding: '2rem',
          borderRadius: '8px',
          marginBottom: '3rem'
        }}>
          <h2 style={{ marginBottom: '1.5rem', color: '#2c3e50' }}>–î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å</h2>
          <div style={{ 
            fontSize: '1rem', 
            lineHeight: '1.8',
            color: '#2c3e50'
          }}>
            {product.detailedDescription.split('\n').map((paragraph, index) => (
              <p key={index} style={{ marginBottom: '1rem' }}>
                {paragraph}
              </p>
            ))}
          </div>
        </div>
      )}

      {/* –¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
      {product.specifications && Object.keys(product.specifications).length > 0 && (
        <div style={{
          backgroundColor: '#ffffff',
          border: '1px solid #e9ecef',
          borderRadius: '8px',
          overflow: 'hidden',
          marginBottom: '3rem'
        }}>
          <div style={{
            backgroundColor: '#008080',
            color: 'white',
            padding: '1rem 1.5rem',
            fontWeight: '600',
            fontSize: '1.1rem'
          }}>
            –¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
          </div>
          <div style={{ padding: '0' }}>
            {Object.entries(product.specifications).map(([key, value], index) => (
              <div 
                key={key}
                style={{
                  display: 'grid',
                  gridTemplateColumns: '1fr 1fr',
                  padding: '1rem 1.5rem',
                  borderBottom: index < Object.keys(product.specifications).length - 1 ? '1px solid #e9ecef' : 'none',
                  backgroundColor: index % 2 === 0 ? '#f8f9fa' : '#ffffff'
                }}
              >
                <div style={{ fontWeight: '500', color: '#2c3e50' }}>
                  {getSpecificationLabel(key)}:
                </div>
                <div style={{ color: '#2c3e50' }}>
                  {getSpecificationValue(key, value)}
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤–Ω–∏–∑—É */}
      <button 
        onClick={handleBackClick}
        className="back-button"
        style={{ marginTop: '3rem', marginBottom: '2rem' }}
      >
        ‚Üê –ù–∞–∑–∞–¥ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É
      </button>

      {/* CSS —Å—Ç–∏–ª—ñ */}
      <style>{`
        .breadcrumb-nav {
          margin-bottom: 2rem;
          padding: 1rem;
          background-color: #f8f9fa;
          border-radius: 8px;
          display: flex;
          align-items: center;
          gap: 0.5rem;
          font-size: 0.9rem;
          flex-wrap: wrap;
        }
        
        .breadcrumb-link {
          color: #008080;
          text-decoration: none;
          transition: color 0.2s ease;
        }
        
        .breadcrumb-link:hover {
          color: #006666;
          text-decoration: underline;
        }
        
        .back-button {
          background: none;
          border: 1px solid #008080;
          color: #008080;
          padding: 0.5rem 1rem;
          border-radius: 4px;
          cursor: pointer;
          margin-bottom: 2rem;
          display: flex;
          align-items: center;
          gap: 0.5rem;
          transition: all 0.2s ease;
          font-size: 0.9rem;
        }
        
        .back-button:hover {
          background-color: #008080;
          color: white;
        }
        
        .product-content {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 3rem;
          margin-bottom: 3rem;
        }
        
        .product-image {
          position: relative;
          height: 400px;
          background-color: #f8f9fa;
          border-radius: 8px;
          display: flex;
          align-items: center;
          justify-content: center;
          color: #6c757d;
          overflow: hidden;
        }
        
        .product-title {
          font-size: 2rem;
          margin-bottom: 1rem;
          color: #2c3e50;
        }
        
        .product-price {
          font-size: 1.5rem;
          font-weight: 600;
          color: #008080;
          margin-bottom: 1.5rem;
          line-height: 1.4;
        }
        
        /* –ü–ª–∞–Ω—à–µ—Ç–∏ */
        @media (max-width: 1024px) {
          .container {
            padding: 2rem 1.5rem;
          }
          
          .product-content {
            gap: 2rem;
          }
          
          .breadcrumb-nav {
            padding: 0.75rem;
            font-size: 0.85rem;
          }
          
          .product-image {
            height: 300px;
          }
          
          .product-title {
            font-size: 1.8rem;
          }
          
          .product-price {
            font-size: 1.4rem;
          }
        }
        
        /* –ú–æ–±—ñ–ª—å–Ω—ñ */
        @media (max-width: 768px) {
          .container {
            padding: 1.5rem 1rem;
          }
          
          .product-content {
            grid-template-columns: 1fr;
            gap: 1.5rem;
          }
          
          .breadcrumb-nav {
            padding: 0.5rem;
            font-size: 0.8rem;
            gap: 0.25rem;
          }
          
          .back-button {
            width: 100%;
            justify-content: center;
            padding: 0.75rem;
          }
          
          .product-image {
            height: 250px;
          }
          
          .product-title {
            font-size: 1.5rem;
          }
          
          .product-price {
            font-size: 1.3rem;
          }
        }
        
        /* –î—É–∂–µ –º–∞–ª–µ–Ω—å–∫—ñ –µ–∫—Ä–∞–Ω–∏ */
        @media (max-width: 480px) {
          .container {
            padding: 1rem 1rem !important;
          }
          
          .breadcrumb-nav {
            margin-bottom: 1rem;
          }
          
          .product-image {
            height: 200px;
          }
          
          .product-title {
            font-size: 1.3rem;
          }
          
          .product-price {
            font-size: 1.2rem;
          }
        }
      `}</style>
    </div>
  );
};

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑—Ä–æ–∑—É–º—ñ–ª–∏—Ö –Ω–∞–∑–≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
const getSpecificationLabel = (key) => {
  const labels = {
    fraction: '–§—Ä–∞–∫—Ü—ñ—è',
    density: '–©—ñ–ª—å–Ω—ñ—Å—Ç—å',
    strength: '–ú—ñ—Ü–Ω—ñ—Å—Ç—å',
    frost_resistance: '–ú–æ—Ä–æ–∑–æ—Å—Ç—ñ–π–∫—ñ—Å—Ç—å',
    rock_type: '–¢–∏–ø –ø–æ—Ä–æ–¥–∏',
    sand_type: '–¢–∏–ø –ø—ñ—Å–∫—É',
    module_size: '–ú–æ–¥—É–ª—å –∫—Ä—É–ø–Ω–æ—Å—Ç—ñ',
    clay_content: '–í–º—ñ—Å—Ç –≥–ª–∏–Ω–∏—Å—Ç–∏—Ö —á–∞—Å—Ç–∏–Ω–æ–∫',
    moisture: '–í–æ–ª–æ–≥—ñ—Å—Ç—å',
    bulk_density: '–ù–∞—Å–∏–ø–Ω–∞ —â—ñ–ª—å–Ω—ñ—Å—Ç—å',
    concrete_grade: '–ú–∞—Ä–∫–∞ –±–µ—Ç–æ–Ω—É',
    concrete_class: '–ö–ª–∞—Å –±–µ—Ç–æ–Ω—É',
    workability: '–†—É—Ö–ª–∏–≤—ñ—Å—Ç—å',
    asphalt_type: '–¢–∏–ø –∞—Å—Ñ–∞–ª—å—Ç—É',
    asphalt_grade: '–ú–∞—Ä–∫–∞ –∞—Å—Ñ–∞–ª—å—Ç—É',
    max_grain_size: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –∑–µ—Ä–µ–Ω'
  };
  
  return labels[key] || key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É –∑–Ω–∞—á–µ–Ω—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
const getSpecificationValue = (key, value) => {
  // –ü–µ—Ä–µ–∫–ª–∞–¥–∏ –¥–ª—è —Ç–∏–ø—É –ø–æ—Ä–æ–¥–∏
  if (key === 'rock_type') {
    const rockTypeTranslations = {
      'granite': '–≥—Ä–∞–Ω—ñ—Ç'
    };
    return rockTypeTranslations[value] || value;
  }
  
  // –ü–µ—Ä–µ–∫–ª–∞–¥–∏ –¥–ª—è —Ç–∏–ø—É –ø—ñ—Å–∫—É
  if (key === 'sand_type') {
    const sandTypeTranslations = {
      'river': '—Ä—ñ—á–∫–æ–≤–∏–π',
      'ravine': '—è—Ä—É–∂–Ω–∏–π'
    };
    return sandTypeTranslations[value] || value;
  }
  
  // –î–ª—è —ñ–Ω—à–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
  return value;
};

export default ProductDetail;