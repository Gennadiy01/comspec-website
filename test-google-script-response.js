/**
 * üß™ –¢–ï–°–¢ –í–Ü–î–ü–û–í–Ü–î–Ü GOOGLE APPS SCRIPT
 * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è managerTelegramChatId
 */

const https = require('https');

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const GOOGLE_SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbz3XE8u5O2Q9ez4OpKcyPB6TtrGp0ul6hPJsud4Dethj0fA2ixU7t4XCwJefl4EIgAd/exec';

/**
 * –¢–µ—Å—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ Google Apps Script
 */
function testGoogleScript() {
  const testOrder = {
    action: 'saveOrder',
    name: '–¢–µ—Å—Ç Google Script Response',
    phone: '+380123456789',
    email: 'test-response@comspec.ua',
    product: '–©–µ–±—ñ–Ω—å',
    deliveryType: 'delivery',
    address: '–º. –ö–∏—ó–≤, –≤—É–ª. –¢–µ—Å—Ç–æ–≤–∞, 1',
    message: '–¢–µ—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Google Apps Script - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ managerTelegramChatId',
    source: 'google-script-response-test',
    mode: 'order'
  };

  const queryParams = new URLSearchParams(testOrder);
  const url = `${GOOGLE_SCRIPT_URL}?${queryParams.toString()}`;
  
  console.log('üß™ –¢–ï–°–¢ –í–Ü–î–ü–û–í–Ü–î–Ü GOOGLE APPS SCRIPT');
  console.log('='.repeat(60));
  console.log(`üïí –ß–∞—Å: ${new Date().toLocaleString('uk-UA')}`);
  console.log('='.repeat(60));
  console.log(`üì° URL: ${url}`);
  console.log('üìã –î–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', testOrder);
  console.log('='.repeat(60));

  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      
      console.log(`üìä HTTP Status: ${res.statusCode}`);
      console.log(`üìä Headers:`, res.headers);
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        console.log('\nüìã –ü–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Google Apps Script:');
        console.log(data);
        
        try {
          const result = JSON.parse(data);
          
          console.log('\nüîç –ê–ù–ê–õ–Ü–ó –í–Ü–î–ü–û–í–Ü–î–Ü:');
          console.log('='.repeat(40));
          console.log(`‚úÖ Success: ${result.success}`);
          console.log(`üìù Order ID: ${result.orderId}`);
          console.log(`üë®‚Äçüíº Manager: ${result.manager}`);
          console.log(`üìû Manager Phone: ${result.managerPhone}`);
          
          // –ö–†–ò–¢–ò–ß–ù–ï: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Chat ID
          if (result.managerTelegramChatId) {
            console.log(`‚úÖ Manager Telegram Chat ID: ${result.managerTelegramChatId}`);
          } else {
            console.log(`‚ùå Manager Telegram Chat ID: –í–Ü–î–°–£–¢–ù–Ü–ô!`);
            console.log(`‚ö†Ô∏è –¶–µ –ø–æ—è—Å–Ω—é—î —á–æ–º—É Telegram –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –Ω–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è`);
          }
          
          console.log(`üìÖ Date: ${result.date}`);
          console.log(`‚è∞ Time: ${result.time}`);
          console.log(`üó∫Ô∏è Region: ${result.region}`);
          
          if (result.managerStats) {
            console.log(`üìä Manager Stats: ${JSON.stringify(result.managerStats)}`);
          }
          
          console.log('\nüéØ –í–ò–°–ù–û–í–û–ö:');
          if (result.managerTelegramChatId) {
            console.log('‚úÖ Google Apps Script –ø–æ–≤–µ—Ä—Ç–∞—î Chat ID - Telegram –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏');
          } else {
            console.log('‚ùå Google Apps Script –ù–ï –ø–æ–≤–µ—Ä—Ç–∞—î Chat ID');
            console.log('üîß –ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é getTelegramChatId() –≤ Google Apps Script');
          }
          
          console.log('='.repeat(60));
          resolve(result);
          
        } catch (error) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON:', error.message);
          console.log('üìã Raw response:', data);
          reject(error);
        }
      });
    }).on('error', (error) => {
      console.error('üö® HTTP –ø–æ–º–∏–ª–∫–∞:', error.message);
      reject(error);
    });
  });
}

/**
 * –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü—ñ—ó getTelegramChatId
 */
function testGetTelegramChatId() {
  const testParams = {
    action: 'testTelegram'
  };

  const queryParams = new URLSearchParams(testParams);
  const url = `${GOOGLE_SCRIPT_URL}?${queryParams.toString()}`;
  
  console.log('\nüß™ –¢–ï–°–¢ –§–£–ù–ö–¶–Ü–á getTelegramChatId');
  console.log('='.repeat(60));
  console.log(`üì° URL: ${url}`);

  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        console.log('\nüìã –í—ñ–¥–ø–æ–≤—ñ–¥—å —Ç–µ—Å—Ç—É Telegram —Ñ—É–Ω–∫—Ü—ñ–π:');
        console.log(data);
        
        try {
          const result = JSON.parse(data);
          
          console.log('\nüîç –ê–ù–ê–õ–Ü–ó TELEGRAM –¢–ï–°–¢–£:');
          console.log('='.repeat(40));
          
          if (result.success && result.test1) {
            console.log(`‚úÖ Test 1 passed: ${result.test1.passed}`);
            console.log(`üë§ Manager found: ${result.test1.manager}`);
            console.log(`üì± Chat ID: ${result.test1.chatId}`);
            
            if (result.test1.chatId === '1559533342') {
              console.log('‚úÖ Chat ID –¥–ª—è –ì–µ–Ω–Ω–∞–¥—ñ—è –î–∏–∫–æ–≥–æ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
            } else {
              console.log('‚ùå Chat ID –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π');
            }
          } else {
            console.log('‚ùå Telegram —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–≤—Å—è');
          }
          
          console.log('='.repeat(60));
          resolve(result);
          
        } catch (error) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON:', error.message);
          reject(error);
        }
      });
    }).on('error', (error) => {
      console.error('üö® HTTP –ø–æ–º–∏–ª–∫–∞:', error.message);
      reject(error);
    });
  });
}

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
 */
async function runTests() {
  try {
    // –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó getTelegramChatId
    await testGetTelegramChatId();
    
    // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –¢–µ—Å—Ç 2: –†–µ–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    await testGoogleScript();
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤
runTests();