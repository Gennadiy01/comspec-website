{"version":3,"file":"static/js/528.c32139da.chunk.js","mappings":"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","sources":["components/search/HybridSearchEngine.js"],"sourcesContent":["// HybridSearchEngine.js\r\n// Версія 3.1 - Оптимізована версія з покращеною релевантністю\r\n// 🎯 Цільовий результат: Точні та релевантні результати пошуку\r\n\r\nimport { getAllStaticData, getDynamicScanConfig, getContextPatterns } from '../../data/UnifiedSearchIndex.js';\r\n\r\n/**\r\n * 🔍 COMSPEC Hybrid Search Engine v3.1\r\n * Інтелектуальна система пошуку з покращеною релевантністю\r\n * Оптимізовано для точних та релевантних результатів\r\n */\r\nclass HybridSearchEngine {\r\n  constructor() {\r\n    this.staticIndex = new Map();\r\n    this.dynamicIndex = new Map();\r\n    this.contextualIndex = new Map();\r\n    this.isInitialized = false;\r\n    this.stats = {\r\n      staticIndex: 0,\r\n      dynamicIndex: 0,\r\n      totalRecords: 0,\r\n      staticWithContext: 0,\r\n      dynamicWithContext: 0\r\n    };\r\n    \r\n    // Оптимізовані налаштування для якісного пошуку\r\n    this.searchConfig = {\r\n      maxDynamicElements: 200,          // Обмежено для продуктивності\r\n      scanDepth: 5,                     // Оптимальна глибина сканування\r\n      minTextLength: 3,                 // Мінімальна довжина тексту\r\n      includeHiddenElements: false,     // Не включати приховані елементи\r\n      includeMetaElements: true,        // Включати meta елементи\r\n      enhancedContentScan: true         // Розширене сканування контенту\r\n    };\r\n    \r\n    // Селектори для динамічного сканування (розширені)\r\n    this.dynamicSelectors = {\r\n      mainContent: 'main, .container, section, article',\r\n      headings: 'h1, h2, h3, h4, h5, h6',\r\n      textContent: 'p, span, div, li, td, th',\r\n      cards: '.card, .achievement-item, .timeline-item, .product-card, .service-card',\r\n      contactInfo: '.contact-section, .contacts-page, .contact-info',\r\n      contactAddresses: '.contact-address, .address, [class*=\"address\"]',\r\n      contactPhones: '.contact-phone, .phone, [href^=\"tel:\"], [class*=\"phone\"]',\r\n      contactEmails: '.contact-email, .email, [href^=\"mailto:\"], [class*=\"email\"]',\r\n      navigation: 'nav a, .menu a, .footer a',\r\n      buttons: 'button, .btn, .button, input[type=\"submit\"]',\r\n      forms: 'form, .form, input, textarea, select',\r\n      meta: 'meta[name], meta[property], [data-*]',\r\n      hidden: '[style*=\"display: none\"], [hidden]'\r\n    };\r\n    \r\n    // Ваги для різних типів контенту\r\n    this.contentWeights = {\r\n      h1: 10, h2: 8, h3: 6, h4: 4, h5: 3, h6: 2,\r\n      'p': 3, 'span': 1, 'div': 2, 'li': 2,\r\n      'button': 4, '.btn': 4, 'a': 3, 'meta': 2\r\n    };\r\n    \r\n    // Шаблони для розпізнавання типів контенту (розширені)\r\n    this.contextPatterns = {\r\n      address: [\r\n        /вул\\.|вулиця|проспект|пр\\.|площа|пл\\.|бульвар|б-р/i,\r\n        /київ|одеса|харків|дніпро|львів|запоріжжя|буча|бровари/i,\r\n        /промислова|перемоги|хрещатик|незалежності|будівельна|заводська/i,\r\n        /область|місто|м\\.|смт\\.|село|с\\./i\r\n      ],\r\n      phone: [\r\n        /\\+?\\d{2,3}[\\s-()]*\\d{2,3}[\\s-()]*\\d{2,3}[\\s-()]*\\d{2,3}/,\r\n        /телефон|тел\\.|phone|моб\\.|мобільний|зв'язок/i,\r\n        /073|067|050|063|066|068|096|097|098|099|044|032/\r\n      ],\r\n      email: [\r\n        /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/,\r\n        /email|пошта|mail|е-mail|@/i,\r\n        /@comspec\\.ua|@gmail\\.com|@ukr\\.net|info@|support@/i\r\n      ],\r\n      product: [\r\n        /щебінь|пісок|бетон|асфальт|матеріал|будівельн/i,\r\n        /гранітний|вапняковий|річковий|кар'єрний|товарний/i,\r\n        /фракція|марка|якість|сертифікат/i\r\n      ],\r\n      service: [\r\n        /доставка|послуг|сервіс|оренда|консультац/i,\r\n        /лабораторн|контроль|розробка|логістик/i,\r\n        /буріння|вибух|маркшейдер|рекультивац/i\r\n      ]\r\n    };\r\n    \r\n    // Завантажуємо конфігурацію з UnifiedSearchIndex\r\n    this.loadUnifiedConfig();\r\n    \r\n    // Збагачуємо статичний індекс з розширеним контентом\r\n    this.initializeStaticIndex();\r\n    \r\n    // console.log('🔧 HybridSearchEngine v3.0 ініціалізовано (з UnifiedSearchIndex)');\r\n  }\r\n\r\n  /**\r\n   * 🔧 Завантаження конфігурації з UnifiedSearchIndex\r\n   */\r\n  loadUnifiedConfig() {\r\n    // console.log('📦 Завантаження конфігурації з UnifiedSearchIndex...');\r\n    \r\n    // Завантажуємо конфігурацію динамічного сканування\r\n    const dynamicConfig = getDynamicScanConfig();\r\n    if (dynamicConfig) {\r\n      this.dynamicSelectors = dynamicConfig.selectors;\r\n      this.contentWeights = dynamicConfig.contentWeights;\r\n      this.searchConfig = { ...this.searchConfig, ...dynamicConfig.config };\r\n    }\r\n    \r\n    // Завантажуємо контекстні шаблони\r\n    const contextPatterns = getContextPatterns();\r\n    if (contextPatterns) {\r\n      this.contextPatterns = contextPatterns;\r\n    }\r\n    \r\n    // console.log('✅ Конфігурація з UnifiedSearchIndex завантажена');\r\n  }\r\n\r\n  /**\r\n   * 🚀 Ініціалізація статичного індексу з розширеним контентом\r\n   */\r\n  initializeStaticIndex() {\r\n    // console.log('📚 Ініціалізація розширеного статичного індексу...');\r\n    \r\n    // Базові дані з UnifiedSearchIndex\r\n    const baseStaticData = getAllStaticData();\r\n    \r\n    // Розширені дані вже включені в baseStaticData з UnifiedSearchIndex\r\n    // console.log(`📊 Завантажено ${baseStaticData.length} записів з UnifiedSearchIndex`);\r\n    \r\n    // Додаємо до статичного індексу\r\n    baseStaticData.forEach(item => {\r\n      if (item && (item.title || item.content)) {\r\n        const enrichedItem = this.enrichStaticItemWithContext(item);\r\n        this.staticIndex.set(enrichedItem.id, enrichedItem);\r\n      }\r\n    });\r\n    \r\n    this.stats.staticIndex = this.staticIndex.size;\r\n    // console.log(`📚 Статичний індекс створено: ${this.staticIndex.size} записів`);\r\n  }\r\n\r\n  /**\r\n   * 🔧 Збагачення статичного елемента контекстом\r\n   */\r\n  enrichStaticItemWithContext(item) {\r\n    const enrichedItem = {\r\n      ...item,\r\n      searchableFields: [],\r\n      elementType: 'static',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    // Створюємо контекст\r\n    enrichedItem.context = this.createStaticContext(item);\r\n    \r\n    // Створюємо пошукові поля\r\n    enrichedItem.searchableFields = this.createSearchableFields(enrichedItem);\r\n    \r\n    return enrichedItem;\r\n  }\r\n\r\n  /**\r\n   * ⚡ Асинхронна ініціалізація\r\n   */\r\n  async initialize() {\r\n    try {\r\n      // console.log('🚀 Ініціалізація HybridSearchEngine v3.0...');\r\n      \r\n      // Спочатку статичні дані (вже ініціалізовані)\r\n      // console.log(`📚 Статичний індекс: ${this.staticIndex.size} записів`);\r\n      \r\n      // Розширене динамічне сканування\r\n      // console.log('🔍 Початок розширеного сканування динамічного контенту...');\r\n      await this.performEnhancedDynamicScan();\r\n      \r\n      // Фінальна індексація контексту\r\n      this.indexContextualData();\r\n      \r\n      this.isInitialized = true;\r\n      \r\n      const finalStats = this.getStats();\r\n      // console.log('📊 Фінальна статистика після ініціалізації:', finalStats);\r\n      \r\n      return true;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Помилка ініціалізації HybridSearchEngine:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔄 Розширене динамічне сканування\r\n   */\r\n  async performEnhancedDynamicScan() {\r\n    const scannedElements = new Set();\r\n    const foundItems = new Map();\r\n    \r\n    // Розширені селектори для більш глибокого сканування\r\n    const selectors = [\r\n      'h1, h2, h3, h4, h5, h6',\r\n      'p, span, div, section, article',\r\n      'a[href], button, .btn',\r\n      'input, textarea, select, form',\r\n      'li, td, th, dl, dt, dd',\r\n      '[data-title], [data-content], [data-id]',\r\n      '[class*=\"product\"], [class*=\"service\"]',\r\n      '[class*=\"contact\"], [class*=\"info\"], [class*=\"about\"]',\r\n      '[class*=\"hero\"], [class*=\"cta\"], [class*=\"stats\"]',\r\n      '[class*=\"card\"], [class*=\"item\"], [class*=\"feature\"]',\r\n      '.modal, .form, .footer',\r\n      '[id*=\"nav\"], [id*=\"menu\"], [id*=\"header\"]',\r\n      '[aria-label], [title], [alt]'\r\n    ];\r\n    \r\n    for (const selector of selectors) {\r\n      try {\r\n        const elements = document.querySelectorAll(selector);\r\n        console.log(`🔍 Сканування \"${selector}\": знайдено ${elements.length} елементів`);\r\n        \r\n        elements.forEach((element, index) => {\r\n          try {\r\n            if (scannedElements.has(element)) return;\r\n            scannedElements.add(element);\r\n            \r\n            const itemData = this.extractEnhancedElementData(element, selector, index);\r\n            if (itemData && this.isValidItemData(itemData)) {\r\n              const uniqueId = itemData.id || `${selector.replace(/[^a-zA-Z0-9]/g, '_')}_${index}`;\r\n              \r\n              if (!foundItems.has(uniqueId)) {\r\n                foundItems.set(uniqueId, itemData);\r\n              }\r\n            }\r\n          } catch (elementError) {\r\n            console.warn(`⚠️ Помилка обробки елемента в \"${selector}\":`, elementError);\r\n          }\r\n        });\r\n      } catch (selectorError) {\r\n        console.warn(`⚠️ Помилка селектора \"${selector}\":`, selectorError);\r\n      }\r\n    }\r\n    \r\n    // Додаємо знайдені елементи до динамічного індексу\r\n    foundItems.forEach((item, id) => {\r\n      this.dynamicIndex.set(id, {\r\n        ...item,\r\n        elementType: 'dynamic',\r\n        timestamp: new Date().toISOString(),\r\n        searchableFields: this.createSearchableFields(item)\r\n      });\r\n    });\r\n    \r\n    this.stats.dynamicIndex = this.dynamicIndex.size;\r\n    \r\n    console.log(`✅ Розширене динамічне сканування завершено:\r\n  📊 Оброблено елементів: ${scannedElements.size}\r\n  📊 Унікальних записів: ${foundItems.size}`);\r\n    \r\n    return foundItems;\r\n  }\r\n\r\n\r\n  /**\r\n   * 📝 Розширене витягування даних з елементів\r\n   */\r\n  extractEnhancedElementData(element, selector, index) {\r\n    try {\r\n      const data = {\r\n        id: null,\r\n        title: '',\r\n        type: 'unknown',\r\n        content: '',\r\n        context: 'content',\r\n        element: element,\r\n        selector: selector\r\n      };\r\n      \r\n      // Витягуємо ID\r\n      data.id = element.id || \r\n               element.getAttribute('data-id') || \r\n               `${selector.replace(/[^a-zA-Z0-9]/g, '_')}_${index}`;\r\n      \r\n      // Витягуємо заголовок\r\n      data.title = element.getAttribute('title') ||\r\n                  element.getAttribute('aria-label') ||\r\n                  element.getAttribute('alt') ||\r\n                  element.getAttribute('data-title') ||\r\n                  this.extractTextContent(element, 100) ||\r\n                  `Елемент ${selector}`;\r\n      \r\n      // Витягуємо контент\r\n      data.content = this.extractCompleteContent(element);\r\n      \r\n      // Визначаємо тип контенту\r\n      data.type = this.determineContentType(element, data.content);\r\n      \r\n      // Визначаємо контекст\r\n      data.context = this.determineContext(element, data.content);\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.warn('⚠️ Помилка витягування даних:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 📄 Витягування повного контенту з елемента\r\n   */\r\n  extractCompleteContent(element) {\r\n    let content = '';\r\n    \r\n    // Основний текст\r\n    const textContent = element.textContent || element.innerText || '';\r\n    if (textContent.trim()) {\r\n      content += textContent.trim() + ' ';\r\n    }\r\n    \r\n    // Атрибути\r\n    const attributes = ['title', 'alt', 'aria-label', 'data-content', 'placeholder', 'value'];\r\n    attributes.forEach(attr => {\r\n      const value = element.getAttribute(attr);\r\n      if (value && value.trim()) {\r\n        content += value.trim() + ' ';\r\n      }\r\n    });\r\n    \r\n    // Спеціальні елементи\r\n    if (element.tagName === 'META') {\r\n      const metaContent = element.getAttribute('content');\r\n      if (metaContent) {\r\n        content += metaContent + ' ';\r\n      }\r\n    }\r\n    \r\n    if (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA') {\r\n      const inputValue = element.value || element.getAttribute('value');\r\n      if (inputValue) {\r\n        content += inputValue + ' ';\r\n      }\r\n    }\r\n    \r\n    return content.trim();\r\n  }\r\n\r\n  /**\r\n   * ✅ Валідація даних елемента\r\n   */\r\n  isValidItemData(itemData) {\r\n    if (!itemData || typeof itemData !== 'object') return false;\r\n    \r\n    // Мінімальні вимоги\r\n    if (!itemData.title && !itemData.content) return false;\r\n    \r\n    // Перевірка довжини\r\n    const totalLength = (itemData.title || '').length + (itemData.content || '').length;\r\n    if (totalLength < this.searchConfig.minTextLength) return false;\r\n    \r\n    // Фільтруємо спам та некорисний контент\r\n    const spamKeywords = ['script', 'style', 'noscript', 'undefined', 'null'];\r\n    const contentLower = (itemData.content || '').toLowerCase();\r\n    \r\n    if (spamKeywords.some(keyword => contentLower.includes(keyword))) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 🔍 Індексація контекстуальних даних\r\n   */\r\n  indexContextualData() {\r\n    console.log('🔍 Індексація контекстуальних даних...');\r\n    \r\n    const allItems = new Map([...this.staticIndex, ...this.dynamicIndex]);\r\n    \r\n    allItems.forEach((item, id) => {\r\n      // Створюємо контекстуальні зв'язки\r\n      const contextKey = `${item.type}_${item.context}`;\r\n      \r\n      if (!this.contextualIndex.has(contextKey)) {\r\n        this.contextualIndex.set(contextKey, []);\r\n      }\r\n      \r\n      this.contextualIndex.get(contextKey).push(id);\r\n      \r\n      // Оновлюємо статистику контексту\r\n      this.updateContextStats(item);\r\n    });\r\n    \r\n    console.log(`✅ Контекстуальна індексація завершена: ${this.contextualIndex.size} контекстів`);\r\n  }\r\n\r\n  /**\r\n   * 📊 Оновлення статистики контексту\r\n   */\r\n  updateContextStats(item) {\r\n    if (item.context) {\r\n      if (item.elementType === 'static' || item.elementType === 'supplemental') {\r\n        this.stats.staticWithContext = this.stats.staticWithContext || 0;\r\n        this.stats.staticWithContext++;\r\n      } else {\r\n        this.stats.dynamicWithContext = this.stats.dynamicWithContext || 0;\r\n        this.stats.dynamicWithContext++;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔧 Створення контексту для статичних елементів\r\n   */\r\n  createStaticContext(item) {\r\n    if (!item || typeof item !== 'object') {\r\n      return this.createEmptyContext();\r\n    }\r\n    \r\n    const text = `${item.title || ''} ${item.content || ''}`.toLowerCase();\r\n    \r\n    let field = 'content';\r\n    let fieldLabel = 'Контент';\r\n    let fieldSelector = null;\r\n    \r\n    // Визначаємо тип поля за змістом\r\n    if (this.contextPatterns) {\r\n      if (this.contextPatterns.address && this.contextPatterns.address.some(pattern => pattern.test(text))) {\r\n        field = 'address';\r\n        fieldLabel = 'Адреса';\r\n        fieldSelector = '.contact-address, .address, [class*=\"address\"]';\r\n      } else if (this.contextPatterns.phone && this.contextPatterns.phone.some(pattern => pattern.test(text))) {\r\n        field = 'phone';\r\n        fieldLabel = 'Телефон';\r\n        fieldSelector = '.contact-phone, .phone, [href^=\"tel:\"]';\r\n      } else if (this.contextPatterns.email && this.contextPatterns.email.some(pattern => pattern.test(text))) {\r\n        field = 'email';\r\n        fieldLabel = 'Email';\r\n        fieldSelector = '.contact-email, .email, [href^=\"mailto:\"]';\r\n      } else if (this.contextPatterns.product && this.contextPatterns.product.some(pattern => pattern.test(text))) {\r\n        field = 'product';\r\n        fieldLabel = 'Продукція';\r\n        fieldSelector = '.product, .product-card';\r\n      } else if (this.contextPatterns.service && this.contextPatterns.service.some(pattern => pattern.test(text))) {\r\n        field = 'service';\r\n        fieldLabel = 'Послуга';\r\n        fieldSelector = '.service, .service-card';\r\n      }\r\n    }\r\n    \r\n    return {\r\n      field,\r\n      fieldSelector,\r\n      fieldLabel,\r\n      exactContent: item.content || item.title || '',\r\n      searchableFields: {}\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 🔧 Створення порожнього контексту\r\n   */\r\n  createEmptyContext() {\r\n    return {\r\n      field: 'content',\r\n      fieldSelector: null,\r\n      fieldLabel: 'Контент',\r\n      exactContent: '',\r\n      searchableFields: {}\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 🔍 Визначення типу контенту\r\n   */\r\n  determineContentType(element, content) {\r\n    const tagName = element.tagName.toLowerCase();\r\n    const className = element.className || '';\r\n    const id = element.id || '';\r\n    const contentLower = content.toLowerCase();\r\n    \r\n    // Продукція\r\n    if ((this.contextPatterns.product && this.contextPatterns.product.some(pattern => pattern.test(contentLower))) ||\r\n        className.includes('product') || id.includes('product')) {\r\n      return 'product';\r\n    }\r\n    \r\n    // Послуги\r\n    if ((this.contextPatterns.service && this.contextPatterns.service.some(pattern => pattern.test(contentLower))) ||\r\n        className.includes('service') || id.includes('service')) {\r\n      return 'service';\r\n    }\r\n    \r\n    // Контакти\r\n    if ((this.contextPatterns.phone && this.contextPatterns.phone.some(pattern => pattern.test(contentLower))) ||\r\n        (this.contextPatterns.email && this.contextPatterns.email.some(pattern => pattern.test(contentLower))) ||\r\n        (this.contextPatterns.address && this.contextPatterns.address.some(pattern => pattern.test(contentLower))) ||\r\n        className.includes('contact') || id.includes('contact')) {\r\n      return 'contact';\r\n    }\r\n    \r\n    // Навігація\r\n    if (tagName === 'a' || className.includes('nav') || id.includes('nav') ||\r\n        className.includes('menu') || id.includes('menu')) {\r\n      return 'navigation';\r\n    }\r\n    \r\n    // Форми\r\n    if (tagName === 'form' || tagName === 'input' || tagName === 'button' ||\r\n        className.includes('form') || className.includes('btn')) {\r\n      return 'form';\r\n    }\r\n    \r\n    // Заголовки\r\n    if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tagName)) {\r\n      return 'heading';\r\n    }\r\n    \r\n    return 'content';\r\n  }\r\n\r\n  /**\r\n   * 🎯 Визначення контексту\r\n   */\r\n  determineContext(element, content) {\r\n    const contentLower = content.toLowerCase();\r\n    \r\n    // Телефон\r\n    if (this.contextPatterns.phone && this.contextPatterns.phone.some(pattern => pattern.test(content))) {\r\n      return 'phone';\r\n    }\r\n    \r\n    // Email\r\n    if (this.contextPatterns.email && this.contextPatterns.email.some(pattern => pattern.test(content))) {\r\n      return 'email';\r\n    }\r\n    \r\n    // Адреса\r\n    if (this.contextPatterns.address && this.contextPatterns.address.some(pattern => pattern.test(contentLower))) {\r\n      return 'address';\r\n    }\r\n    \r\n    // Продукція\r\n    if (this.contextPatterns.product && this.contextPatterns.product.some(pattern => pattern.test(contentLower))) {\r\n      return 'product';\r\n    }\r\n    \r\n    // Послуги\r\n    if (this.contextPatterns.service && this.contextPatterns.service.some(pattern => pattern.test(contentLower))) {\r\n      return 'service';\r\n    }\r\n    \r\n    return 'content';\r\n  }\r\n\r\n  /**\r\n   * 🔧 Створення пошукових полів\r\n   */\r\n  createSearchableFields(item) {\r\n    const fields = [];\r\n    \r\n    if (item.title) fields.push(item.title);\r\n    if (item.content) fields.push(item.content);\r\n    if (item.type) fields.push(item.type);\r\n    if (item.context) fields.push(item.context);\r\n    \r\n    // Додаємо keywords якщо є\r\n    if (item.keywords && Array.isArray(item.keywords)) {\r\n      fields.push(...item.keywords);\r\n    }\r\n    \r\n    // Додаткові поля залежно від типу\r\n    if (item.type === 'product') {\r\n      fields.push('будівельні матеріали', 'якість', 'доставка');\r\n    }\r\n    \r\n    if (item.type === 'service') {\r\n      fields.push('послуги', 'сервіс', 'допомога');\r\n    }\r\n    \r\n    if (item.context === 'phone') {\r\n      fields.push('телефон', 'зв\\'язок', 'контакт');\r\n    }\r\n    \r\n    if (item.context === 'address') {\r\n      fields.push('адреса', 'місцезнаходження', 'офіс');\r\n    }\r\n    \r\n    return fields;\r\n  }\r\n\r\n  /**\r\n   * 🧹 Витягування тексту з обмеженням\r\n   */\r\n  extractTextContent(element, maxLength = 100) {\r\n    const text = element.textContent || element.innerText || '';\r\n    return text.length > maxLength ? text.substring(0, maxLength).trim() + '...' : text.trim();\r\n  }\r\n\r\n  /**\r\n   * 🔍 Основна функція пошуку\r\n   */\r\n  search(query, limit = 10) {\r\n    if (!this.isInitialized) {\r\n      console.warn('⚠️ Пошуковий движок не ініціалізовано, виконую ініціалізацію...');\r\n      this.initialize();\r\n    }\r\n    \r\n    if (!query || typeof query !== 'string' || query.trim().length === 0) {\r\n      console.warn('⚠️ Некоректний пошуковий запит');\r\n      return [];\r\n    }\r\n    \r\n    const startTime = performance.now();\r\n    // console.log(`🔍 Пошук: \"${query}\"`);\r\n    \r\n    try {\r\n      const normalizedQuery = query.toLowerCase().trim();\r\n      const queryTerms = normalizedQuery.split(/\\s+/);\r\n      \r\n      const results = [];\r\n      const allItems = new Map([...this.staticIndex, ...this.dynamicIndex]);\r\n      \r\n      // Пошук по всіх записах з фільтрацією за мінімальною релевантністю\r\n      const minRelevanceThreshold = 50; // Мінімальний поріг релевантності\r\n      \r\n      allItems.forEach((item, id) => {\r\n        const relevance = this.calculateRelevance(item, queryTerms, normalizedQuery);\r\n        \r\n        if (relevance >= minRelevanceThreshold) {\r\n          results.push({\r\n            id: id,\r\n            title: item.title,\r\n            content: item.content,\r\n            type: item.type,\r\n            context: item.context,\r\n            relevance: relevance,\r\n            element: item.element,\r\n            searchableFields: item.searchableFields,\r\n            indexType: item.elementType || 'static'\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Сортуємо за релевантністю\r\n      results.sort((a, b) => b.relevance - a.relevance);\r\n      \r\n      const limitedResults = results.slice(0, limit);\r\n      const searchTime = performance.now() - startTime;\r\n      \r\n      // console.log(`📊 Знайдено результатів: ${limitedResults.length}`);\r\n      // console.log(`⏱️ Час пошуку: ${searchTime.toFixed(2)}ms`);\r\n      \r\n      return limitedResults;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Помилка пошуку:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🎯 Розрахунок релевантності (покращений алгоритм)\r\n   */\r\n  calculateRelevance(item, queryTerms, fullQuery) {\r\n    let relevance = 0;\r\n    \r\n    const searchableText = (item.searchableFields || []).join(' ').toLowerCase();\r\n    const titleText = (item.title || '').toLowerCase();\r\n    const contentText = (item.content || '').toLowerCase();\r\n    const keywordsText = (item.keywords || []).join(' ').toLowerCase();\r\n    \r\n    // Перевірка на точне співпадіння в заголовку (найвища вага)\r\n    if (titleText === fullQuery) {\r\n      relevance += 1000;\r\n    } else if (titleText.includes(fullQuery)) {\r\n      relevance += 500;\r\n    }\r\n    \r\n    // Точне співпадіння в ключових словах\r\n    if (keywordsText.includes(fullQuery)) {\r\n      relevance += 300;\r\n    }\r\n    \r\n    // Точне співпадіння в контенті\r\n    if (contentText.includes(fullQuery)) {\r\n      relevance += 200;\r\n    }\r\n    \r\n    // Точне співпадіння в searchableFields\r\n    if (searchableText.includes(fullQuery)) {\r\n      relevance += 100;\r\n    }\r\n    \r\n    // Аналіз окремих термінів з урахуванням важливості\r\n    queryTerms.forEach(term => {\r\n      if (term.length >= 2) {\r\n        // Перевірка на точне співпадіння терміну\r\n        const exactTitleMatch = titleText === term;\r\n        const exactKeywordMatch = (item.keywords || []).some(keyword => \r\n          keyword.toLowerCase() === term\r\n        );\r\n        \r\n        if (exactTitleMatch) {\r\n          relevance += 800;\r\n        } else if (exactKeywordMatch) {\r\n          relevance += 600;\r\n        } else {\r\n          // Звичайні співпадіння\r\n          const titleMatches = (titleText.match(new RegExp(term, 'g')) || []).length;\r\n          const contentMatches = (contentText.match(new RegExp(term, 'g')) || []).length;\r\n          const keywordMatches = (keywordsText.match(new RegExp(term, 'g')) || []).length;\r\n          \r\n          relevance += titleMatches * 50;\r\n          relevance += contentMatches * 20;\r\n          relevance += keywordMatches * 80;\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Бонус за тип контенту (тільки для релевантних результатів)\r\n    if (relevance > 0) {\r\n      const contextBonus = {\r\n        'phone': 10,\r\n        'email': 10,\r\n        'address': 15,\r\n        'product': 100,  // Підвищено для продуктів\r\n        'service': 50,   // Підвищено для послуг\r\n        'content': 5\r\n      };\r\n      \r\n      relevance += contextBonus[item.context] || 0;\r\n      \r\n      // Бонус за тип елемента\r\n      const typeBonus = {\r\n        'product': 100,\r\n        'service': 50,\r\n        'contact': 20,\r\n        'navigation': 5,\r\n        'heading': 10\r\n      };\r\n      \r\n      relevance += typeBonus[item.type] || 0;\r\n    }\r\n    \r\n    return Math.round(relevance);\r\n  }\r\n\r\n  /**\r\n   * 📊 Отримання статистики\r\n   */\r\n  getStats() {\r\n    return {\r\n      ...this.stats,\r\n      totalRecords: this.staticIndex.size + this.dynamicIndex.size,\r\n      isInitialized: this.isInitialized,\r\n      contextualIndexSize: this.contextualIndex.size\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 📈 Отримання статистики контексту\r\n   */\r\n  getContextStats() {\r\n    const stats = {\r\n      totalWithContext: 0,\r\n      byField: {\r\n        address: 0,\r\n        phone: 0,\r\n        email: 0,\r\n        product: 0,\r\n        service: 0,\r\n        content: 0\r\n      },\r\n      totalSearchableFields: 0,\r\n      byIndexType: {\r\n        static: {\r\n          total: this.stats.staticIndex,\r\n          withContext: this.stats.staticWithContext || 0\r\n        },\r\n        dynamic: {\r\n          total: this.stats.dynamicIndex,\r\n          withContext: this.stats.dynamicWithContext || 0\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Підрахунок по всіх записах\r\n    const allItems = new Map([...this.staticIndex, ...this.dynamicIndex]);\r\n    \r\n    allItems.forEach(item => {\r\n      if (item.context) {\r\n        stats.totalWithContext++;\r\n        if (stats.byField[item.context] !== undefined) {\r\n          stats.byField[item.context]++;\r\n        } else {\r\n          stats.byField.content++;\r\n        }\r\n      }\r\n      \r\n      if (item.searchableFields) {\r\n        stats.totalSearchableFields += item.searchableFields.length;\r\n      }\r\n    });\r\n    \r\n    console.log('📊 Статистика контексту:', stats);\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * 🔧 Діагностика проблем з контекстом\r\n   */\r\n  diagnoseContextIssues() {\r\n    console.log('🔬 ДІАГНОСТИКА ПРОБЛЕМ З КОНТЕКСТОМ');\r\n    console.log('==================================================');\r\n    \r\n    const issues = {\r\n      nullRecords: [],\r\n      emptyContext: [],\r\n      emptySearchableFields: [],\r\n      missingProperties: [],\r\n      fixedRecords: 0\r\n    };\r\n    \r\n    const allItems = new Map([...this.staticIndex, ...this.dynamicIndex]);\r\n    \r\n    allItems.forEach((item, id) => {\r\n      // Перевірка на null записи\r\n      if (!item) {\r\n        issues.nullRecords.push(id);\r\n        return;\r\n      }\r\n      \r\n      // Перевірка порожнього контексту\r\n      if (!item.context || item.context.trim() === '') {\r\n        issues.emptyContext.push(id);\r\n        // Автоматичне виправлення\r\n        item.context = 'content';\r\n        issues.fixedRecords++;\r\n      }\r\n      \r\n      // Перевірка пошукових полів\r\n      if (!item.searchableFields || !Array.isArray(item.searchableFields) || item.searchableFields.length === 0) {\r\n        issues.emptySearchableFields.push(id);\r\n        // Автоматичне виправлення\r\n        item.searchableFields = this.createSearchableFields(item);\r\n        issues.fixedRecords++;\r\n      }\r\n      \r\n      // Перевірка обов'язкових властивостей\r\n      if (!item.title && !item.content) {\r\n        issues.missingProperties.push(id);\r\n      }\r\n    });\r\n    \r\n    console.log('📊 Знайдено проблем:');\r\n    console.log(`   ❌ Null записів: ${issues.nullRecords.length}`);\r\n    console.log(`   ❌ Порожній контекст: ${issues.emptyContext.length}`);\r\n    console.log(`   ❌ Порожні searchableFields: ${issues.emptySearchableFields.length}`);\r\n    console.log(`   ❌ Відсутні властивості: ${issues.missingProperties.length}`);\r\n    console.log(`   🔧 Виправлених записів: ${issues.fixedRecords}`);\r\n    \r\n    if (issues.fixedRecords === 0 && \r\n        issues.nullRecords.length === 0 && \r\n        issues.emptyContext.length === 0 && \r\n        issues.emptySearchableFields.length === 0 && \r\n        issues.missingProperties.length === 0) {\r\n      console.log('\\n🎯 Загальний стан: ✅ ВСЕ ІДЕАЛЬНО');\r\n    } else if (issues.fixedRecords > 0) {\r\n      console.log('\\n🎯 Загальний стан: 🔧 ПРОБЛЕМИ ВИПРАВЛЕНО АВТОМАТИЧНО');\r\n    } else {\r\n      console.log('\\n🎯 Загальний стан: ⚠️ ПОТРЕБУЄ УВАГИ');\r\n    }\r\n    \r\n    return issues;\r\n  }\r\n\r\n  /**\r\n   * 🔄 Демонстрація можливостей\r\n   */\r\n  demonstrateCapabilities() {\r\n    console.log('🎬 ДЕМОНСТРАЦІЯ ПОШУКУ COMSPEC');\r\n    console.log('========================================');\r\n    \r\n    const testQueries = [\r\n      { query: 'пісок', category: 'Продукція' },\r\n      { query: 'телефон', category: 'Контакти' },\r\n      { query: 'доставка', category: 'Послуги' },\r\n      { query: '044', category: 'Контекстний пошук' },\r\n      { query: 'київ', category: 'Адреси' }\r\n    ];\r\n    \r\n    testQueries.forEach(test => {\r\n      console.log(`\\n🔍 Тест: \"${test.query}\" (${test.category})`);\r\n      \r\n      const results = this.search(test.query, 3);\r\n      console.log(`   📊 Результатів: ${results.length}`);\r\n      \r\n      if (results.length > 0) {\r\n        console.log(`   🎯 Топ результат: \"${results[0].title}\"`);\r\n        console.log(`   📈 Релевантність: ${results[0].relevance}`);\r\n      }\r\n    });\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 🔬 Діагностика системи\r\n   */\r\n  diagnoseSystem() {\r\n    console.log('🔬 ДІАГНОСТИКА СИСТЕМИ ПОШУКУ COMSPEC');\r\n    console.log('==================================================');\r\n    \r\n    const components = {\r\n      hybridSearchEngine: true,\r\n      contextSearch: true,\r\n      searchHighlighting: !!(window.SearchHighlighting || window.searchHighlighting)\r\n    };\r\n    \r\n    console.log('🔧 КОМПОНЕНТИ:');\r\n    Object.entries(components).forEach(([name, available]) => {\r\n      console.log(`   ${available ? '✅' : '❌'} ${name}: ${available}`);\r\n    });\r\n    \r\n    const stats = this.getStats();\r\n    const contextStats = this.getContextStats();\r\n    \r\n    console.log('\\n📊 СТАТИСТИКА:');\r\n    console.log(`   📝 Всього записів: ${stats.totalRecords}`);\r\n    console.log(`   🎯 З контекстом: ${contextStats.totalWithContext}/${stats.totalRecords} (${Math.round((contextStats.totalWithContext/stats.totalRecords)*100)}%)`);\r\n    console.log(`   🔍 Статичних з контекстом: ${contextStats.byIndexType.static.withContext}/${contextStats.byIndexType.static.total} (${Math.round((contextStats.byIndexType.static.withContext/contextStats.byIndexType.static.total)*100)}%)`);\r\n    \r\n    // Тест продуктивності\r\n    const startTime = performance.now();\r\n    const testResults = this.search('пісок', 5);\r\n    const endTime = performance.now();\r\n    const searchTime = endTime - startTime;\r\n    \r\n    console.log(`\\n⚡ ТЕСТ: ${testResults.length} результатів за ${Math.round(searchTime)}ms`);\r\n    \r\n    const isReady = stats.totalRecords >= 201 && contextStats.totalWithContext >= stats.totalRecords * 0.95;\r\n    console.log(`\\n🎯 СТАН: ${isReady ? '✅ ГОТОВО' : '⚠️ ПОТРЕБУЄ ДООПРАЦЮВАННЯ'}`);\r\n    \r\n    return {\r\n      components,\r\n      stats,\r\n      isReady,\r\n      performance: Math.round(searchTime)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 📤 Експорт діагностичних даних\r\n   */\r\n  exportDiagnosticData() {\r\n    const stats = this.getStats();\r\n    const contextStats = this.getContextStats();\r\n    \r\n    const diagnosticData = {\r\n      timestamp: new Date().toISOString(),\r\n      version: 'COMSPEC Search v3.0',\r\n      stats: stats,\r\n      contextStats: contextStats,\r\n      isReady: stats.totalRecords >= 201 && contextStats.totalWithContext === stats.totalRecords\r\n    };\r\n    \r\n    console.log('📋 ЕКСПОРТ СТАТИСТИКИ COMSPEC SEARCH');\r\n    console.log('=============================================');\r\n    console.log(JSON.stringify(diagnosticData, null, 2));\r\n    \r\n    // Зберігаємо в localStorage\r\n    try {\r\n      localStorage.setItem('comspec-search-diagnostic', JSON.stringify(diagnosticData));\r\n      console.log('\\n💾 Статистика збережена у localStorage');\r\n    } catch (error) {\r\n      console.warn('⚠️ Не вдалося зберегти в localStorage:', error);\r\n    }\r\n    \r\n    return diagnosticData;\r\n  }\r\n}\r\n\r\n// Створюємо екземпляр\r\nconst hybridSearchEngine = new HybridSearchEngine();\r\n\r\n// Утиліти для тестування та інтеграції\r\nhybridSearchEngine.contextUtils = {\r\n  \r\n  quickTest: (searchTerm = 'пісок') => {\r\n    console.log(`🚀 Швидкий тест: \"${searchTerm}\"`);\r\n    const results = hybridSearchEngine.search(searchTerm, 5);\r\n    \r\n    results.forEach((result, index) => {\r\n      console.log(`${index + 1}. ${result.title} (${result.indexType || 'unknown'})`);\r\n      console.log(`   📊 Релевантність: ${result.relevance}`);\r\n    });\r\n    \r\n    return results;\r\n  },\r\n  \r\n  fix: () => {\r\n    return hybridSearchEngine.diagnoseContextIssues();\r\n  },\r\n  \r\n  restart: () => {\r\n    console.log('🔄 Перезапуск системи');\r\n    hybridSearchEngine.staticIndex.clear();\r\n    hybridSearchEngine.dynamicIndex.clear();\r\n    hybridSearchEngine.contextualIndex.clear();\r\n    hybridSearchEngine.isInitialized = false;\r\n    \r\n    hybridSearchEngine.initializeStaticIndex();\r\n    hybridSearchEngine.initialize();\r\n    \r\n    return hybridSearchEngine.getStats();\r\n  },\r\n\r\n  demo: () => {\r\n    return hybridSearchEngine.demonstrateCapabilities();\r\n  },\r\n\r\n  fullDiagnosis: () => {\r\n    console.log('🔬 ПОВНА ДІАГНОСТИКА СИСТЕМИ');\r\n    console.log('='.repeat(40));\r\n    \r\n    const stats = hybridSearchEngine.getStats();\r\n    const contextStats = hybridSearchEngine.getContextStats();\r\n    const issues = hybridSearchEngine.diagnoseContextIssues();\r\n    \r\n    console.log('📊 СТАТИСТИКА:');\r\n    console.log(`   📝 Всього записів: ${stats.totalRecords}`);\r\n    console.log(`   🎯 З контекстом: ${stats.totalWithContext}/${stats.totalRecords} (${Math.round((contextStats.totalWithContext/stats.totalRecords)*100)}%)`);\r\n    \r\n    const isReady = stats.totalRecords >= 201 && contextStats.totalWithContext >= stats.totalRecords * 0.90;\r\n    console.log(`\\n🎯 СТАН: ${isReady ? '✅ ГОТОВО' : '⚠️ ПОТРЕБУЄ НАЛАШТУВАННЯ'}`);\r\n    \r\n    return { stats, contextStats, issues, isReady };\r\n  },\r\n\r\n  getIssuesArray: () => {\r\n    const issues = hybridSearchEngine.diagnoseContextIssues();\r\n    return [\r\n      ...issues.nullRecords,\r\n      ...issues.emptyContext,\r\n      ...issues.emptySearchableFields,\r\n      ...issues.missingProperties\r\n    ];\r\n  }\r\n};\r\n\r\n// Глобальні утиліти для браузера\r\nif (typeof window !== 'undefined') {\r\n  window.hybridSearchEngine = hybridSearchEngine;\r\n  window.contextSearch = hybridSearchEngine.contextUtils;\r\n  \r\n  window.diagnoseSearchSystem = () => {\r\n    return hybridSearchEngine.diagnoseSystem();\r\n  };\r\n  \r\n  window.comspecSearchUtils = {\r\n    quickTest: () => window.diagnoseSearchSystem(),\r\n    fix: () => window.contextSearch.fix(),\r\n    restart: () => window.contextSearch.restart(),\r\n    getStats: () => hybridSearchEngine.getStats(),\r\n    \r\n    testSearch: (query = 'пісок', limit = 5) => {\r\n      console.log(`🔍 Тест пошуку: \"${query}\"`);\r\n      const start = performance.now();\r\n      const results = hybridSearchEngine.search(query, limit);\r\n      const end = performance.now();\r\n      \r\n      console.log(`📊 Результатів: ${results.length}`);\r\n      console.log(`⚡ Час: ${Math.round(end - start)}ms`);\r\n      \r\n      results.forEach((result, index) => {\r\n        console.log(`${index + 1}. ${result.title} (релевантність: ${result.relevance})`);\r\n      });\r\n      \r\n      return results;\r\n    },\r\n\r\n    demo: () => hybridSearchEngine.contextUtils.demo(),\r\n    fullDiagnosis: () => hybridSearchEngine.contextUtils.fullDiagnosis(),\r\n    \r\n    exportStats: () => {\r\n      return hybridSearchEngine.exportDiagnosticData();\r\n    },\r\n\r\n    analyzeContext: () => {\r\n      console.log('🔍 АНАЛІЗ КОНТЕКСТУ');\r\n      console.log('='.repeat(30));\r\n      \r\n      const contextStats = hybridSearchEngine.getContextStats();\r\n      \r\n      console.log('📊 Розподіл по типах полів:');\r\n      Object.entries(contextStats.byField).forEach(([field, count]) => {\r\n        if (count > 0) {\r\n          console.log(`   ${field}: ${count} записів`);\r\n        }\r\n      });\r\n      \r\n      console.log(`\\n🔍 Всього пошукових полів: ${contextStats.totalSearchableFields}`);\r\n      console.log(`📝 Записів з контекстом: ${contextStats.totalWithContext}`);\r\n      \r\n      return contextStats;\r\n    },\r\n\r\n    getIssuesArray: () => hybridSearchEngine.contextUtils.getIssuesArray()\r\n  };\r\n}\r\n\r\n// Експорт для ES6 модулів\r\nexport default hybridSearchEngine;"],"names":["hybridSearchEngine","constructor","this","staticIndex","Map","dynamicIndex","contextualIndex","isInitialized","stats","totalRecords","staticWithContext","dynamicWithContext","searchConfig","maxDynamicElements","scanDepth","minTextLength","includeHiddenElements","includeMetaElements","enhancedContentScan","dynamicSelectors","mainContent","headings","textContent","cards","contactInfo","contactAddresses","contactPhones","contactEmails","navigation","buttons","forms","meta","hidden","contentWeights","h1","h2","h3","h4","h5","h6","contextPatterns","address","phone","email","product","service","loadUnifiedConfig","initializeStaticIndex","dynamicConfig","getDynamicScanConfig","selectors","_objectSpread","config","getContextPatterns","getAllStaticData","forEach","item","title","content","enrichedItem","enrichStaticItemWithContext","set","id","size","searchableFields","elementType","timestamp","Date","toISOString","context","createStaticContext","createSearchableFields","initialize","performEnhancedDynamicScan","indexContextualData","getStats","error","console","scannedElements","Set","foundItems","selector","elements","document","querySelectorAll","log","concat","length","element","index","has","add","itemData","extractEnhancedElementData","isValidItemData","uniqueId","replace","elementError","warn","selectorError","data","type","getAttribute","extractTextContent","extractCompleteContent","determineContentType","determineContext","innerText","trim","attr","value","tagName","metaContent","inputValue","contentLower","toLowerCase","some","keyword","includes","contextKey","get","push","updateContextStats","createEmptyContext","text","field","fieldLabel","fieldSelector","pattern","test","exactContent","className","fields","keywords","Array","isArray","maxLength","arguments","undefined","substring","search","query","limit","startTime","performance","now","normalizedQuery","queryTerms","split","results","allItems","minRelevanceThreshold","relevance","calculateRelevance","indexType","sort","a","b","limitedResults","slice","fullQuery","searchableText","join","titleText","contentText","keywordsText","term","exactTitleMatch","exactKeywordMatch","titleMatches","match","RegExp","contentMatches","keywordMatches","Math","round","contextualIndexSize","getContextStats","totalWithContext","byField","totalSearchableFields","byIndexType","static","total","withContext","dynamic","diagnoseContextIssues","issues","nullRecords","emptyContext","emptySearchableFields","missingProperties","fixedRecords","demonstrateCapabilities","category","diagnoseSystem","components","contextSearch","searchHighlighting","window","SearchHighlighting","Object","entries","_ref","name","available","contextStats","testResults","searchTime","isReady","exportDiagnosticData","diagnosticData","version","JSON","stringify","localStorage","setItem","contextUtils","quickTest","searchTerm","result","fix","restart","clear","demo","fullDiagnosis","repeat","getIssuesArray","diagnoseSearchSystem","comspecSearchUtils","testSearch","start","end","exportStats","analyzeContext","_ref2","count"],"sourceRoot":""}